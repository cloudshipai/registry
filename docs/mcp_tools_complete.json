{
  "mcp_tools_documentation": {
    "version": "1.0.0",
    "generated_date": "2025-08-21",
    "total_modules": 78,
    "total_tools": 554,
    "modules": {
      "actionlint": {
        "name": "actionlint",
        "description": "GitHub Actions workflow linter",
        "has_variables": false,
        "filename": "actionlint.go",
        "tools_count": 3,
        "tools": [
          {
            "name": "actionlint_scan_workflows",
            "description": "Scan GitHub Actions workflow files for issues",
            "parameters": [
              {
                "name": "workflow_files",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "format_template",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "ignore_patterns",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "color",
                "type": "boolean",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "actionlint_scan_with_external_tools",
            "description": "Scan workflows with shellcheck and pyflakes integration",
            "parameters": [
              {
                "name": "workflow_files",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "shellcheck_path",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "pyflakes_path",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "color",
                "type": "boolean",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "actionlint_get_version",
            "description": "Get Actionlint version information",
            "parameters": []
          }
        ]
      },
      "allstar": {
        "name": "allstar",
        "description": "Kubernetes security policy enforcement",
        "has_variables": false,
        "filename": "allstar.go",
        "tools_count": 1,
        "tools": [
          {
            "name": "allstar_info",
            "description": "Get information about Allstar (Note: Allstar is a GitHub App service, not a CLI tool)",
            "parameters": []
          }
        ]
      },
      "aws-iam-rotation": {
        "name": "aws-iam-rotation",
        "description": "AWS IAM credential rotation",
        "has_variables": true,
        "filename": "aws_iam_rotation.go",
        "tools_count": 6,
        "tools": [
          {
            "name": "aws_iam_list_access_keys",
            "description": "List access keys for an IAM user",
            "parameters": [
              {
                "name": "user_name",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "profile",
                "type": "string",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "aws_iam_create_access_key",
            "description": "Create a new access key for an IAM user",
            "parameters": [
              {
                "name": "user_name",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "profile",
                "type": "string",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "aws_iam_update_access_key",
            "description": "Update the status of an access key (Active/Inactive)",
            "parameters": [
              {
                "name": "access_key_id",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "status",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "user_name",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "profile",
                "type": "string",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "aws_iam_delete_access_key",
            "description": "Delete an access key for an IAM user",
            "parameters": [
              {
                "name": "access_key_id",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "user_name",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "profile",
                "type": "string",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "aws_iam_get_access_key_last_used",
            "description": "Get information about when an access key was last used",
            "parameters": [
              {
                "name": "access_key_id",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "profile",
                "type": "string",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "aws_iam_get_version",
            "description": "Get AWS CLI version information",
            "parameters": []
          }
        ]
      },
      "aws-pricing": {
        "name": "aws-pricing",
        "description": "AWS pricing and cost calculator",
        "has_variables": true,
        "filename": "aws_pricing.go",
        "tools_count": 4,
        "tools": [
          {
            "name": "aws_pricing_describe_services",
            "description": "Get metadata for AWS services and their pricing attributes",
            "parameters": [
              {
                "name": "service_code",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "profile",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "max_items",
                "type": "string",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "aws_pricing_get_attribute_values",
            "description": "Get available attribute values for AWS service pricing filters",
            "parameters": [
              {
                "name": "service_code",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "attribute_name",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "profile",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "max_items",
                "type": "string",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "aws_pricing_get_products",
            "description": "Get AWS pricing information for products that match filter criteria",
            "parameters": [
              {
                "name": "service_code",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "filters",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "format_version",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "profile",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "max_items",
                "type": "string",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "aws_pricing_get_version",
            "description": "Get AWS CLI version information",
            "parameters": []
          }
        ]
      },
      "cert-manager": {
        "name": "cert-manager",
        "description": "Certificate management",
        "has_variables": false,
        "filename": "cert_manager.go",
        "tools_count": 7,
        "tools": [
          {
            "name": "cert_manager_install",
            "description": "Install cert-manager using kubectl apply",
            "parameters": [
              {
                "name": "version",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "dry_run",
                "type": "boolean",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "cert_manager_check_installation",
            "description": "Check cert-manager installation status",
            "parameters": [
              {
                "name": "namespace",
                "type": "string",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "cert_manager_create_certificate_request",
            "description": "Create a CertificateRequest using cmctl",
            "parameters": [
              {
                "name": "name",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "from_certificate_file",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "timeout",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "fetch_certificate",
                "type": "boolean",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "cert_manager_list_certificates",
            "description": "List certificates using kubectl",
            "parameters": [
              {
                "name": "namespace",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "all_namespaces",
                "type": "boolean",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "cert_manager_renew_certificate",
            "description": "Mark certificate for manual renewal using cmctl",
            "parameters": [
              {
                "name": "cert_name",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "namespace",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "all",
                "type": "boolean",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "cert_manager_status",
            "description": "Get status of certificate using cmctl",
            "parameters": [
              {
                "name": "certificate_name",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "namespace",
                "type": "string",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "cert_manager_get_version",
            "description": "Get cmctl version information",
            "parameters": []
          }
        ]
      },
      "cfn-nag": {
        "name": "cfn-nag",
        "description": "CloudFormation security linter",
        "has_variables": false,
        "filename": "cfn_nag.go",
        "tools_count": 6,
        "tools": [
          {
            "name": "cfn_nag_scan",
            "description": "Scan CloudFormation templates for security issues using cfn_nag_scan",
            "parameters": [
              {
                "name": "input_path",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "output_format",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "debug",
                "type": "boolean",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "cfn_nag_scan_with_profile",
            "description": "Scan CloudFormation template with specific rule profile",
            "parameters": [
              {
                "name": "input_path",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "profile_path",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "deny_list_path",
                "type": "string",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "cfn_nag_scan_with_parameters",
            "description": "Scan CloudFormation template with parameter values",
            "parameters": [
              {
                "name": "input_path",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "parameter_values_path",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "condition_values_path",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "rule_arguments",
                "type": "string",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "cfn_nag_list_rules",
            "description": "List all available CFN Nag rules",
            "parameters": []
          },
          {
            "name": "cfn_nag_spcm_scan",
            "description": "Generate Stelligent Policy Complexity Metrics report",
            "parameters": [
              {
                "name": "input_path",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "output_format",
                "type": "string",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "cfn_nag_get_version",
            "description": "Get cfn_nag version information",
            "parameters": []
          }
        ]
      },
      "check-ssl-cert": {
        "name": "check-ssl-cert",
        "description": "SSL certificate validation",
        "has_variables": false,
        "filename": "check_ssl_cert.go",
        "tools_count": 6,
        "tools": [
          {
            "name": "check_ssl_cert_host",
            "description": "Check SSL certificate for a remote host",
            "parameters": [
              {
                "name": "host",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "port",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "warning",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "critical",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "protocol",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "selfsigned",
                "type": "boolean",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "check_ssl_cert_file",
            "description": "Check SSL certificate from a local file",
            "parameters": [
              {
                "name": "file",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "warning",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "critical",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "selfsigned",
                "type": "boolean",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "check_ssl_cert_chain",
            "description": "Check SSL certificate with chain validation",
            "parameters": [
              {
                "name": "host",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "rootcert",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "check_chain",
                "type": "boolean",
                "description": "",
                "required": false
              },
              {
                "name": "noauth",
                "type": "boolean",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "check_ssl_cert_fingerprint",
            "description": "Check SSL certificate fingerprint",
            "parameters": [
              {
                "name": "host",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "fingerprint",
                "type": "string",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "check_ssl_cert_all",
            "description": "Check SSL certificate with all optional checks enabled",
            "parameters": [
              {
                "name": "host",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "timeout",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "debug",
                "type": "boolean",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "check_ssl_cert_get_version",
            "description": "Get check_ssl_cert version information",
            "parameters": []
          }
        ]
      },
      "checkov": {
        "name": "checkov",
        "description": "Infrastructure as code static analysis",
        "has_variables": false,
        "filename": "checkov.go",
        "tools_count": 10,
        "tools": [
          {
            "name": "checkov_scan_directory",
            "description": "Scan directory for security issues using Checkov",
            "parameters": [
              {
                "name": "directory",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "framework",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "output",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "compact",
                "type": "boolean",
                "description": "",
                "required": false
              },
              {
                "name": "quiet",
                "type": "boolean",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "checkov_scan_file",
            "description": "Scan specific file(s) for security issues using Checkov",
            "parameters": [
              {
                "name": "file",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "framework",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "output",
                "type": "string",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "checkov_scan_with_checks",
            "description": "Scan with specific checks enabled or disabled",
            "parameters": [
              {
                "name": "directory",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "check",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "skip_check",
                "type": "string",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "checkov_scan_docker_image",
            "description": "Scan Docker container image for vulnerabilities",
            "parameters": [
              {
                "name": "docker_image",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "dockerfile_path",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "output",
                "type": "string",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "checkov_scan_packages",
            "description": "Scan package dependencies for vulnerabilities",
            "parameters": [
              {
                "name": "directory",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "output",
                "type": "string",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "checkov_scan_secrets",
            "description": "Scan for hardcoded secrets in code",
            "parameters": [
              {
                "name": "directory",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "output",
                "type": "string",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "checkov_scan_with_config",
            "description": "Scan using configuration file",
            "parameters": [
              {
                "name": "directory",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "config_file",
                "type": "string",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "checkov_create_config",
            "description": "Generate configuration file from current settings",
            "parameters": [
              {
                "name": "config_path",
                "type": "string",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "checkov_download_external_modules",
            "description": "Scan with external module downloading enabled",
            "parameters": [
              {
                "name": "directory",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "download_external_modules",
                "type": "boolean",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "checkov_get_version",
            "description": "Get Checkov version information",
            "parameters": []
          }
        ]
      },
      "cloudquery": {
        "name": "cloudquery",
        "description": "Cloud asset inventory",
        "has_variables": true,
        "filename": "cloudquery.go",
        "tools_count": 10,
        "tools": [
          {
            "name": "cloudquery_sync",
            "description": "Sync resources from source plugins to destinations",
            "parameters": [
              {
                "name": "config_path",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "log_level",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "no_migrate",
                "type": "boolean",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "cloudquery_migrate",
            "description": "Update destination schema based on source configuration",
            "parameters": [
              {
                "name": "config_path",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "log_level",
                "type": "string",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "cloudquery_init",
            "description": "Generate initial configuration file",
            "parameters": [
              {
                "name": "source",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "destination",
                "type": "string",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "cloudquery_validate_config",
            "description": "Validate CloudQuery configuration files",
            "parameters": [
              {
                "name": "config_path",
                "type": "string",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "cloudquery_test_connection",
            "description": "Test plugin connections without running full sync",
            "parameters": [
              {
                "name": "config_path",
                "type": "string",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "cloudquery_tables",
            "description": "Generate documentation for supported tables",
            "parameters": [
              {
                "name": "source",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "output_dir",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "format",
                "type": "string",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "cloudquery_login",
            "description": "Login to CloudQuery Hub",
            "parameters": []
          },
          {
            "name": "cloudquery_logout",
            "description": "Logout from CloudQuery Hub",
            "parameters": []
          },
          {
            "name": "cloudquery_plugin_install",
            "description": "Install CloudQuery plugin",
            "parameters": [
              {
                "name": "plugin_name",
                "type": "string",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "cloudquery_switch",
            "description": "Switch between CloudQuery contexts or configurations",
            "parameters": []
          }
        ]
      },
      "cloudsplaining": {
        "name": "cloudsplaining",
        "description": "AWS IAM policy scanner",
        "has_variables": true,
        "filename": "cloudsplaining.go",
        "tools_count": 6,
        "tools": [
          {
            "name": "cloudsplaining_download",
            "description": "Download AWS account authorization data",
            "parameters": [
              {
                "name": "profile",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "include_non_default_policy_versions",
                "type": "boolean",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "cloudsplaining_scan",
            "description": "Scan downloaded account authorization data",
            "parameters": [
              {
                "name": "input_file",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "exclusions_file",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "output",
                "type": "string",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "cloudsplaining_scan_policy_file",
            "description": "Scan a specific IAM policy file",
            "parameters": [
              {
                "name": "input_file",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "exclusions_file",
                "type": "string",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "cloudsplaining_create_exclusions_file",
            "description": "Create exclusions file template",
            "parameters": []
          },
          {
            "name": "cloudsplaining_create_multi_account_config",
            "description": "Create multi-account configuration file",
            "parameters": [
              {
                "name": "output_file",
                "type": "string",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "cloudsplaining_scan_multi_account",
            "description": "Scan multiple AWS accounts",
            "parameters": [
              {
                "name": "config_file",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "profile",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "role_name",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "output_bucket",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "output_directory",
                "type": "string",
                "description": "",
                "required": false
              }
            ]
          }
        ]
      },
      "conftest": {
        "name": "conftest",
        "description": "OPA policy testing",
        "has_variables": false,
        "filename": "conftest.go",
        "tools_count": 6,
        "tools": [
          {
            "name": "conftest_validate",
            "description": "Validate YAML/JSON/TF/Dockerfile/etc. against OPA policies",
            "parameters": [
              {
                "name": "input",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "policy",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "namespace",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "format",
                "type": "string",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "conftest_test",
            "description": "Test configuration files against OPA policies",
            "parameters": [
              {
                "name": "input_file",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "policy",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "namespace",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "output",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "parser",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "all_namespaces",
                "type": "boolean",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "conftest_verify",
            "description": "Run policy unit tests",
            "parameters": [
              {
                "name": "policy",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "show_builtin_errors",
                "type": "boolean",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "conftest_parse",
            "description": "Parse and print structured data from input files",
            "parameters": [
              {
                "name": "input_file",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "parser",
                "type": "string",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "conftest_push",
            "description": "Push OPA policy bundles to OCI registry",
            "parameters": [
              {
                "name": "registry_url",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "policy_dir",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "tag",
                "type": "string",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "conftest_get_version",
            "description": "Get Conftest version information",
            "parameters": []
          }
        ]
      },
      "container-registry": {
        "name": "container-registry",
        "description": "Container registry operations",
        "has_variables": true,
        "filename": "container_registry.go",
        "tools_count": 6,
        "tools": [
          {
            "name": "docker_login",
            "description": "Login to container registry using Docker",
            "parameters": [
              {
                "name": "registry",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "username",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "password",
                "type": "string",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "docker_push",
            "description": "Push image to container registry",
            "parameters": [
              {
                "name": "image",
                "type": "string",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "docker_pull",
            "description": "Pull image from container registry",
            "parameters": [
              {
                "name": "image",
                "type": "string",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "docker_images",
            "description": "List local Docker images",
            "parameters": [
              {
                "name": "repository",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "all",
                "type": "boolean",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "docker_tag",
            "description": "Create a tag for an image",
            "parameters": [
              {
                "name": "source_image",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "target_image",
                "type": "string",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "docker_logout",
            "description": "Logout from container registry",
            "parameters": [
              {
                "name": "registry",
                "type": "string",
                "description": "",
                "required": false
              }
            ]
          }
        ]
      },
      "cosign": {
        "name": "cosign",
        "description": "Container signing and verification",
        "has_variables": true,
        "filename": "cosign.go",
        "tools_count": 12,
        "tools": [
          {
            "name": "cosign_sign_image",
            "description": "Sign container image using Cosign",
            "parameters": [
              {
                "name": "image_name",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "key_path",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "keyless",
                "type": "boolean",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "cosign_verify_image",
            "description": "Verify container image signature using Cosign",
            "parameters": [
              {
                "name": "image_name",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "key_path",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "keyless",
                "type": "boolean",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "cosign_generate_key",
            "description": "Generate Cosign key pair for signing",
            "parameters": [
              {
                "name": "output_path",
                "type": "string",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "cosign_attest",
            "description": "Create and sign attestation for container image",
            "parameters": [
              {
                "name": "image_name",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "predicate_path",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "key_path",
                "type": "string",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "cosign_verify_attestation",
            "description": "Verify attestation for container image",
            "parameters": [
              {
                "name": "image_name",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "key_path",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "policy_path",
                "type": "string",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "cosign_sign_blob",
            "description": "Sign arbitrary blob using Cosign",
            "parameters": [
              {
                "name": "blob_path",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "key_path",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "output_signature",
                "type": "string",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "cosign_verify_blob",
            "description": "Verify blob signature using Cosign",
            "parameters": [
              {
                "name": "blob_path",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "signature_path",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "key_path",
                "type": "string",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "cosign_upload_blob",
            "description": "Upload generic artifact as a blob to registry",
            "parameters": [
              {
                "name": "blob_path",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "registry_url",
                "type": "string",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "cosign_upload_wasm",
            "description": "Upload WebAssembly module to registry",
            "parameters": [
              {
                "name": "wasm_path",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "registry_url",
                "type": "string",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "cosign_copy_image",
            "description": "Copy images between registries",
            "parameters": [
              {
                "name": "source_image",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "destination_image",
                "type": "string",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "cosign_sign_wasm",
            "description": "Sign WebAssembly module using Cosign",
            "parameters": [
              {
                "name": "wasm_artifact",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "key_path",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "keyless",
                "type": "boolean",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "cosign_get_version",
            "description": "Get Cosign version information",
            "parameters": []
          }
        ]
      },
      "cosign-golden": {
        "name": "cosign-golden",
        "description": "",
        "has_variables": false,
        "filename": "cosign_golden.go",
        "tools_count": 8,
        "tools": [
          {
            "name": "cosign_advanced_sign_keyless",
            "description": "Sign container image using keyless signing with OIDC",
            "parameters": [
              {
                "name": "image_ref",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "identity_regex",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "issuer",
                "type": "string",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "cosign_advanced_verify_identity",
            "description": "Verify container image signature with certificate identity",
            "parameters": [
              {
                "name": "image_ref",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "certificate_identity",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "certificate_identity_regexp",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "certificate_oidc_issuer",
                "type": "string",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "cosign_advanced_upload_ebpf",
            "description": "Upload eBPF program to OCI registry",
            "parameters": [
              {
                "name": "ebpf_path",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "registry_url",
                "type": "string",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "cosign_advanced_attest_type",
            "description": "Create attestation with specific predicate type",
            "parameters": [
              {
                "name": "image_ref",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "predicate_type",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "predicate_file",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "key",
                "type": "string",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "cosign_advanced_verify_attestation",
            "description": "Verify attestation with specific type and policy",
            "parameters": [
              {
                "name": "image_ref",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "type",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "policy",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "key",
                "type": "string",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "cosign_advanced_verify_offline",
            "description": "Verify signatures using offline bundle",
            "parameters": [
              {
                "name": "image_ref",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "bundle",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "certificate_identity",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "certificate_oidc_issuer",
                "type": "string",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "cosign_advanced_triangulate",
            "description": "Get signature image reference for a given image",
            "parameters": [
              {
                "name": "image_ref",
                "type": "string",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "cosign_advanced_clean",
            "description": "Clean signatures from a given image",
            "parameters": [
              {
                "name": "image_ref",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "type",
                "type": "string",
                "description": "",
                "required": false
              }
            ]
          }
        ]
      },
      "custodian": {
        "name": "custodian",
        "description": "Cloud governance engine",
        "has_variables": true,
        "filename": "custodian.go",
        "tools_count": 8,
        "tools": [
          {
            "name": "custodian_run_policy",
            "description": "Run Cloud Custodian policy for cloud governance",
            "parameters": [
              {
                "name": "policy_file",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "region",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "output_format",
                "type": "string",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "custodian_dry_run",
            "description": "Dry run Cloud Custodian policy (preview mode)",
            "parameters": [
              {
                "name": "policy_file",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "region",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "output_dir",
                "type": "string",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "custodian_validate_policy",
            "description": "Validate Cloud Custodian policy syntax",
            "parameters": [
              {
                "name": "policy_file",
                "type": "string",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "custodian_schema",
            "description": "Get Cloud Custodian policy schema for resource types",
            "parameters": [
              {
                "name": "resource_type",
                "type": "string",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "custodian_get_version",
            "description": "Get Cloud Custodian version information",
            "parameters": []
          },
          {
            "name": "custodian_report",
            "description": "Generate tabular report on policy matched resources",
            "parameters": [
              {
                "name": "policy_file",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "output_dir",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "format",
                "type": "string",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "custodian_logs",
            "description": "Retrieve logs for custodian policy execution",
            "parameters": [
              {
                "name": "policy_file",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "output_dir",
                "type": "string",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "custodian_metrics",
            "description": "Retrieve metrics for custodian policy execution",
            "parameters": [
              {
                "name": "policy_file",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "output_dir",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "start",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "end",
                "type": "string",
                "description": "",
                "required": false
              }
            ]
          }
        ]
      },
      "dependency-track": {
        "name": "dependency-track",
        "description": "OWASP Dependency-Track SBOM analysis",
        "has_variables": true,
        "filename": "dependency_track.go",
        "tools_count": 3,
        "tools": [
          {
            "name": "dependency_track_upload_bom",
            "description": "Upload Software Bill of Materials to Dependency Track using dtrack-cli",
            "parameters": [
              {
                "name": "bom_path",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "project_name",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "project_version",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "server_url",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "api_key",
                "type": "string",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "dependency_track_upload_bom_api",
            "description": "Upload BOM to Dependency Track via REST API using curl",
            "parameters": [
              {
                "name": "bom_path",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "server_url",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "api_key",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "project_name",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "project_version",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "auto_create",
                "type": "boolean",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "dependency_track_generate_bom",
            "description": "Generate CycloneDX BOM using cyclonedx-cli tools",
            "parameters": [
              {
                "name": "project_type",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "project_path",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "output_file",
                "type": "string",
                "description": "",
                "required": false
              }
            ]
          }
        ]
      },
      "dockle": {
        "name": "dockle",
        "description": "Container image linter",
        "has_variables": false,
        "filename": "dockle.go",
        "tools_count": 4,
        "tools": [
          {
            "name": "dockle_scan_image",
            "description": "Scan container image for security and best practices using Dockle",
            "parameters": [
              {
                "name": "image_ref",
                "type": "string",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "dockle_scan_tarball",
            "description": "Scan container image tarball using Dockle",
            "parameters": [
              {
                "name": "tarball_path",
                "type": "string",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "dockle_scan_json",
            "description": "Scan container image and output results in JSON format",
            "parameters": [
              {
                "name": "image_ref",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "output_file",
                "type": "string",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "dockle_scan_tarball_json",
            "description": "Scan container image tarball and output results in JSON format",
            "parameters": [
              {
                "name": "tarball_path",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "output_file",
                "type": "string",
                "description": "",
                "required": false
              }
            ]
          }
        ]
      },
      "falco": {
        "name": "falco",
        "description": "Runtime security monitoring",
        "has_variables": false,
        "filename": "falco.go",
        "tools_count": 7,
        "tools": [
          {
            "name": "falco_start_monitoring",
            "description": "Start Falco runtime security monitoring",
            "parameters": [
              {
                "name": "config_path",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "rules_path",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "output_format",
                "type": "string",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "falco_validate_rules",
            "description": "Validate Falco rules syntax",
            "parameters": [
              {
                "name": "rules_path",
                "type": "string",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "falco_dry_run",
            "description": "Run Falco in dry-run mode without processing events",
            "parameters": [
              {
                "name": "config_path",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "rules_path",
                "type": "string",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "falco_list_fields",
            "description": "List supported fields for Falco rules",
            "parameters": [
              {
                "name": "source",
                "type": "string",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "falco_get_version",
            "description": "Get Falco version information",
            "parameters": []
          },
          {
            "name": "falco_list_rules",
            "description": "List all loaded Falco rules",
            "parameters": [
              {
                "name": "rules_path",
                "type": "string",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "falco_describe_rule",
            "description": "Show description of a specific Falco rule",
            "parameters": [
              {
                "name": "rule_name",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "rules_path",
                "type": "string",
                "description": "",
                "required": false
              }
            ]
          }
        ]
      },
      "fleet": {
        "name": "fleet",
        "description": "GitOps for Kubernetes",
        "has_variables": false,
        "filename": "fleet.go",
        "tools_count": 6,
        "tools": [
          {
            "name": "fleet_apply_gitrepo",
            "description": "Apply Fleet GitRepo configuration using kubectl",
            "parameters": [
              {
                "name": "gitrepo_file",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "namespace",
                "type": "string",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "fleet_get_gitrepos",
            "description": "Get Fleet GitRepos status using kubectl",
            "parameters": [
              {
                "name": "namespace",
                "type": "string",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "fleet_get_bundles",
            "description": "Get Fleet Bundles status using kubectl",
            "parameters": [
              {
                "name": "namespace",
                "type": "string",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "fleet_get_bundledeployments",
            "description": "Get Fleet BundleDeployments status using kubectl",
            "parameters": [
              {
                "name": "namespace",
                "type": "string",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "fleet_describe_gitrepo",
            "description": "Describe Fleet GitRepo using kubectl",
            "parameters": [
              {
                "name": "gitrepo_name",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "namespace",
                "type": "string",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "fleet_install",
            "description": "Install Fleet using Helm",
            "parameters": [
              {
                "name": "version",
                "type": "string",
                "description": "",
                "required": false
              }
            ]
          }
        ]
      },
      "gatekeeper": {
        "name": "gatekeeper",
        "description": "OPA Gatekeeper policy validation",
        "has_variables": false,
        "filename": "gatekeeper.go",
        "tools_count": 7,
        "tools": [
          {
            "name": "gatekeeper_install",
            "description": "Install Gatekeeper using kubectl",
            "parameters": [
              {
                "name": "version",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "use_helm",
                "type": "boolean",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "gatekeeper_uninstall",
            "description": "Uninstall Gatekeeper from cluster",
            "parameters": [
              {
                "name": "version",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "use_helm",
                "type": "boolean",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "gatekeeper_apply_constraint_template",
            "description": "Apply Gatekeeper constraint template using kubectl",
            "parameters": [
              {
                "name": "template_file",
                "type": "string",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "gatekeeper_apply_constraint",
            "description": "Apply Gatekeeper constraint using kubectl",
            "parameters": [
              {
                "name": "constraint_file",
                "type": "string",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "gatekeeper_get_constraint_templates",
            "description": "List Gatekeeper constraint templates",
            "parameters": []
          },
          {
            "name": "gatekeeper_get_constraints",
            "description": "List Gatekeeper constraints",
            "parameters": [
              {
                "name": "constraint_type",
                "type": "string",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "gatekeeper_get_status",
            "description": "Get Gatekeeper system status",
            "parameters": []
          }
        ]
      },
      "git-secrets": {
        "name": "git-secrets",
        "description": "Git repository secret scanner",
        "has_variables": false,
        "filename": "git_secrets.go",
        "tools_count": 7,
        "tools": [
          {
            "name": "git_secrets_scan_repository",
            "description": "Scan git repository for secrets using git-secrets",
            "parameters": [
              {
                "name": "repository_path",
                "type": "string",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "git_secrets_scan_history",
            "description": "Scan git repository history for secrets",
            "parameters": [
              {
                "name": "repository_path",
                "type": "string",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "git_secrets_install_hooks",
            "description": "Install git-secrets hooks in repository",
            "parameters": [
              {
                "name": "repository_path",
                "type": "string",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "git_secrets_add_pattern",
            "description": "Add secret pattern to git-secrets",
            "parameters": [
              {
                "name": "pattern",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "repository_path",
                "type": "string",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "git_secrets_register_aws",
            "description": "Register AWS-specific secret patterns",
            "parameters": [
              {
                "name": "repository_path",
                "type": "string",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "git_secrets_list_config",
            "description": "List current git-secrets configuration",
            "parameters": [
              {
                "name": "repository_path",
                "type": "string",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "git_secrets_add_allowed",
            "description": "Add allowed pattern to prevent false positives",
            "parameters": [
              {
                "name": "pattern",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "repository_path",
                "type": "string",
                "description": "",
                "required": false
              }
            ]
          }
        ]
      },
      "github-admin": {
        "name": "github-admin",
        "description": "GitHub administration tools",
        "has_variables": true,
        "filename": "github_admin.go",
        "tools_count": 6,
        "tools": [
          {
            "name": "github_admin_list_org_repos",
            "description": "List GitHub organization repositories using gh CLI",
            "parameters": [
              {
                "name": "organization",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "visibility",
                "type": "string",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "github_admin_create_org_repo",
            "description": "Create repository in GitHub organization",
            "parameters": [
              {
                "name": "organization",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "repo_name",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "visibility",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "description",
                "type": "string",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "github_admin_get_repo_info",
            "description": "Get GitHub repository information",
            "parameters": [
              {
                "name": "repository",
                "type": "string",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "github_admin_list_org_issues",
            "description": "List issues across organization repositories",
            "parameters": [
              {
                "name": "organization",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "state",
                "type": "string",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "github_admin_list_org_prs",
            "description": "List pull requests across organization repositories",
            "parameters": [
              {
                "name": "organization",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "state",
                "type": "string",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "github_admin_get_version",
            "description": "Get GitHub CLI version information",
            "parameters": []
          }
        ]
      },
      "github-packages": {
        "name": "github-packages",
        "description": "GitHub Packages security",
        "has_variables": true,
        "filename": "github_packages.go",
        "tools_count": 6,
        "tools": [
          {
            "name": "github_packages_list_packages",
            "description": "List GitHub Packages in organization using gh API",
            "parameters": [
              {
                "name": "organization",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "package_type",
                "type": "string",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "github_packages_audit_dependencies",
            "description": "Audit package dependencies for security issues",
            "parameters": [
              {
                "name": "organization",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "package_name",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "version",
                "type": "string",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "github_packages_check_signatures",
            "description": "Verify package signatures and attestations",
            "parameters": [
              {
                "name": "organization",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "package_name",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "version",
                "type": "string",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "github_packages_enforce_policies",
            "description": "Enforce security policies for GitHub Packages",
            "parameters": [
              {
                "name": "organization",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "policy_file",
                "type": "string",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "github_packages_generate_sbom",
            "description": "Generate Software Bill of Materials for packages",
            "parameters": [
              {
                "name": "organization",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "package_name",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "output_format",
                "type": "string",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "github_packages_get_version",
            "description": "Get GitHub Packages security tool version information",
            "parameters": []
          }
        ]
      },
      "gitleaks": {
        "name": "gitleaks",
        "description": "Secret detection in code and git history",
        "has_variables": false,
        "filename": "gitleaks.go",
        "tools_count": 4,
        "tools": [
          {
            "name": "gitleaks_git",
            "description": "Scan git repositories for secrets",
            "parameters": [
              {
                "name": "path",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "config",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "baseline_path",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "report_format",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "report_path",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "log_opts",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "exit_code",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "verbose",
                "type": "boolean",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "gitleaks_dir",
            "description": "Scan directories or files for secrets",
            "parameters": [
              {
                "name": "path",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "config",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "baseline_path",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "report_format",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "report_path",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "exit_code",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "verbose",
                "type": "boolean",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "gitleaks_stdin",
            "description": "Detect secrets from standard input",
            "parameters": [
              {
                "name": "input",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "config",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "baseline_path",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "report_format",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "report_path",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "exit_code",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "verbose",
                "type": "boolean",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "gitleaks_version",
            "description": "Display Gitleaks version",
            "parameters": []
          }
        ]
      },
      "goldilocks": {
        "name": "goldilocks",
        "description": "Kubernetes resource recommendations",
        "has_variables": false,
        "filename": "goldilocks.go",
        "tools_count": 5,
        "tools": [
          {
            "name": "goldilocks_install_helm",
            "description": "Install Goldilocks using Helm chart",
            "parameters": [
              {
                "name": "namespace",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "kubeconfig",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "release_name",
                "type": "string",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "goldilocks_enable_namespace",
            "description": "Enable Goldilocks monitoring for a namespace",
            "parameters": [
              {
                "name": "namespace",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "kubeconfig",
                "type": "string",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "goldilocks_dashboard",
            "description": "Get dashboard access information for Goldilocks",
            "parameters": [
              {
                "name": "namespace",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "kubeconfig",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "local_port",
                "type": "string",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "goldilocks_get_recommendations",
            "description": "Get VPA recommendations from Goldilocks-enabled namespace",
            "parameters": [
              {
                "name": "namespace",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "kubeconfig",
                "type": "string",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "goldilocks_uninstall",
            "description": "Uninstall Goldilocks using Helm",
            "parameters": [
              {
                "name": "namespace",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "kubeconfig",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "release_name",
                "type": "string",
                "description": "",
                "required": false
              }
            ]
          }
        ]
      },
      "grype": {
        "name": "grype",
        "description": "Container vulnerability scanner",
        "has_variables": false,
        "filename": "grype.go",
        "tools_count": 9,
        "tools": [
          {
            "name": "grype_scan",
            "description": "Vulnerability scan from a SBOM (preferred) or direct target; return JSON/SARIF paths and structured counts",
            "parameters": [
              {
                "name": "input",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "format",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "min_severity",
                "type": "string",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "grype_scan_legacy",
            "description": "[DEPRECATED - use grype_scan] Scan target for vulnerabilities",
            "parameters": [
              {
                "name": "target",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "output",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "fail_on",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "exclude",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "scope",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "distro",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "only_fixed",
                "type": "boolean",
                "description": "",
                "required": false
              },
              {
                "name": "only_notfixed",
                "type": "boolean",
                "description": "",
                "required": false
              },
              {
                "name": "add_cpes_if_none",
                "type": "boolean",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "grype_db_status",
            "description": "Report current status of Grype's vulnerability database",
            "parameters": []
          },
          {
            "name": "grype_db_check",
            "description": "Check if updates are available for the vulnerability database",
            "parameters": []
          },
          {
            "name": "grype_db_update",
            "description": "Update the vulnerability database to the latest version",
            "parameters": []
          },
          {
            "name": "grype_db_list",
            "description": "Show databases available for download",
            "parameters": []
          },
          {
            "name": "grype_db_import",
            "description": "Import a vulnerability database archive",
            "parameters": [
              {
                "name": "archive_path",
                "type": "string",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "grype_explain",
            "description": "Get detailed information about a specific CVE from previous scan results",
            "parameters": [
              {
                "name": "cve_id",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "scan_results",
                "type": "string",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "grype_version",
            "description": "Display Grype version information",
            "parameters": []
          }
        ]
      },
      "guac": {
        "name": "guac",
        "description": "Graph for Understanding Artifact Composition",
        "has_variables": false,
        "filename": "guac.go",
        "tools_count": 6,
        "tools": [
          {
            "name": "guac_collect",
            "description": "Run GUAC collector to gather supply chain metadata",
            "parameters": [
              {
                "name": "source_type",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "path",
                "type": "string",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "guac_certify",
            "description": "Run GUAC certifier to add metadata attestations",
            "parameters": [
              {
                "name": "certifier_type",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "attestation_path",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "poll",
                "type": "boolean",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "guac_query",
            "description": "Run GUAC canned queries for analysis",
            "parameters": [
              {
                "name": "query_type",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "subject",
                "type": "string",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "guac_start_graphql",
            "description": "Get information about starting GUAC GraphQL server",
            "parameters": [
              {
                "name": "backend",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "port",
                "type": "string",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "guac_ingest",
            "description": "Ingest SBOM or other supply chain data into GUAC",
            "parameters": [
              {
                "name": "sbom_path",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "nats_addr",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "gql_addr",
                "type": "string",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "guac_collector_subscriber",
            "description": "Generate supply chain graph for a project",
            "parameters": [
              {
                "name": "project_path",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "source_type",
                "type": "string",
                "description": "",
                "required": false
              }
            ]
          }
        ]
      },
      "hadolint": {
        "name": "hadolint",
        "description": "Dockerfile linter",
        "has_variables": false,
        "filename": "hadolint.go",
        "tools_count": 5,
        "tools": [
          {
            "name": "hadolint_scan_dockerfile",
            "description": "Scan Dockerfile for best practices and security issues",
            "parameters": [
              {
                "name": "dockerfile_path",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "format",
                "type": "string",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "hadolint_scan_directory",
            "description": "Scan directory for Dockerfiles",
            "parameters": [
              {
                "name": "directory",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "format",
                "type": "string",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "hadolint_scan_with_config",
            "description": "Scan Dockerfile with custom Hadolint configuration",
            "parameters": [
              {
                "name": "dockerfile_path",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "config_file",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "format",
                "type": "string",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "hadolint_scan_ignore_rules",
            "description": "Scan Dockerfile while ignoring specific rules",
            "parameters": [
              {
                "name": "dockerfile_path",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "ignore_rules",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "format",
                "type": "string",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "hadolint_get_version",
            "description": "Get Hadolint version information",
            "parameters": []
          }
        ]
      },
      "history-scrub": {
        "name": "history-scrub",
        "description": "Git history cleaning and secret removal",
        "has_variables": false,
        "filename": "history_scrub.go",
        "tools_count": 6,
        "tools": [
          {
            "name": "history_scrub_bfg_remove_large_files",
            "description": "Remove large files from git history using BFG Repo-Cleaner",
            "parameters": [
              {
                "name": "repository_path",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "size_threshold",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "dry_run",
                "type": "boolean",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "history_scrub_bfg_replace_text",
            "description": "Replace sensitive text in git history using BFG Repo-Cleaner",
            "parameters": [
              {
                "name": "repository_path",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "replacements_file",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "dry_run",
                "type": "boolean",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "history_scrub_filter_repo_remove_path",
            "description": "Remove files/paths from git history using git-filter-repo",
            "parameters": [
              {
                "name": "repository_path",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "path_to_remove",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "invert_paths",
                "type": "boolean",
                "description": "",
                "required": false
              },
              {
                "name": "dry_run",
                "type": "boolean",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "history_scrub_search_history",
            "description": "Search git history for sensitive patterns using git log",
            "parameters": [
              {
                "name": "repository_path",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "search_pattern",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "search_all_branches",
                "type": "boolean",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "history_scrub_backup_repository",
            "description": "Create backup of repository before cleanup using git clone",
            "parameters": [
              {
                "name": "repository_path",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "backup_path",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "bare_clone",
                "type": "boolean",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "history_scrub_git_cleanup",
            "description": "Run git cleanup commands after history rewriting",
            "parameters": [
              {
                "name": "repository_path",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "aggressive",
                "type": "boolean",
                "description": "",
                "required": false
              }
            ]
          }
        ]
      },
      "iac-plan": {
        "name": "iac-plan",
        "description": "Infrastructure as code planning",
        "has_variables": false,
        "filename": "iac_plan.go",
        "tools_count": 7,
        "tools": [
          {
            "name": "iac_plan_terraform_plan",
            "description": "Generate Terraform execution plan",
            "parameters": [
              {
                "name": "workdir",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "var_file",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "out_file",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "destroy",
                "type": "boolean",
                "description": "",
                "required": false
              },
              {
                "name": "detailed_exitcode",
                "type": "boolean",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "iac_plan_terraform_validate",
            "description": "Validate Terraform configuration syntax",
            "parameters": [
              {
                "name": "workdir",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "json",
                "type": "boolean",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "iac_plan_terraform_format",
            "description": "Format Terraform configuration files",
            "parameters": [
              {
                "name": "workdir",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "check",
                "type": "boolean",
                "description": "",
                "required": false
              },
              {
                "name": "diff",
                "type": "boolean",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "iac_plan_terraform_show",
            "description": "Show Terraform plan in human-readable format",
            "parameters": [
              {
                "name": "workdir",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "plan_file",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "json",
                "type": "boolean",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "iac_plan_terraform_workspace",
            "description": "Manage Terraform workspaces",
            "parameters": [
              {
                "name": "workdir",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "operation",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "workspace_name",
                "type": "string",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "iac_plan_terraform_graph",
            "description": "Generate Terraform dependency graph",
            "parameters": [
              {
                "name": "workdir",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "graph_type",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "output_file",
                "type": "string",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "iac_plan_terraform_init",
            "description": "Initialize Terraform working directory",
            "parameters": [
              {
                "name": "workdir",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "upgrade",
                "type": "boolean",
                "description": "",
                "required": false
              },
              {
                "name": "reconfigure",
                "type": "boolean",
                "description": "",
                "required": false
              }
            ]
          }
        ]
      },
      "in-toto": {
        "name": "in-toto",
        "description": "Supply chain attestation",
        "has_variables": false,
        "filename": "in_toto.go",
        "tools_count": 4,
        "tools": [
          {
            "name": "in_toto_run_step",
            "description": "Run in-toto supply chain step with attestation using in-toto-run",
            "parameters": [
              {
                "name": "step_name",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "command",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "signing_key",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "gpg_keyid",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "materials",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "products",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "record_streams",
                "type": "boolean",
                "description": "",
                "required": false
              },
              {
                "name": "no_command",
                "type": "boolean",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "in_toto_verify",
            "description": "Verify in-toto supply chain integrity using in-toto-verify",
            "parameters": [
              {
                "name": "layout_path",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "layout_key_paths",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "link_dir",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "verbose",
                "type": "boolean",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "in_toto_record",
            "description": "Record in-toto step metadata using in-toto-record",
            "parameters": [
              {
                "name": "step_name",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "operation",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "signing_key",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "gpg_keyid",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "materials",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "products",
                "type": "string",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "in_toto_sign",
            "description": "Sign in-toto metadata or generate layout",
            "parameters": [
              {
                "name": "metadata_file",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "signing_key",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "gpg_keyid",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "output_file",
                "type": "string",
                "description": "",
                "required": false
              }
            ]
          }
        ]
      },
      "infracost": {
        "name": "infracost",
        "description": "Infrastructure cost estimation",
        "has_variables": true,
        "filename": "infracost.go",
        "tools_count": 8,
        "tools": [
          {
            "name": "infracost_breakdown",
            "description": "Generate cost breakdown for Terraform projects using infracost breakdown",
            "parameters": [
              {
                "name": "path",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "config_file",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "format",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "out_file",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "terraform_var_file",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "terraform_var",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "terraform_workspace",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "usage_file",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "show_skipped",
                "type": "boolean",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "infracost_diff",
            "description": "Show diff of monthly costs between current and planned state using infracost diff",
            "parameters": [
              {
                "name": "path",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "compare_to",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "format",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "out_file",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "terraform_var_file",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "terraform_var",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "usage_file",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "show_skipped",
                "type": "boolean",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "infracost_output",
            "description": "Combine and output Infracost JSON files in different formats using infracost output",
            "parameters": [
              {
                "name": "path",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "format",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "out_file",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "show_skipped",
                "type": "boolean",
                "description": "",
                "required": false
              },
              {
                "name": "show_all_projects",
                "type": "boolean",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "infracost_upload",
            "description": "Upload an Infracost JSON file to Infracost Cloud using infracost upload",
            "parameters": [
              {
                "name": "path",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "format",
                "type": "string",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "infracost_configure",
            "description": "Set global configuration using infracost configure set",
            "parameters": [
              {
                "name": "setting",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "value",
                "type": "string",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "infracost_generate_config",
            "description": "Generate Infracost config file from a template file using infracost generate config",
            "parameters": [
              {
                "name": "repo_path",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "template_path",
                "type": "string",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "infracost_auth_login",
            "description": "Get a free API key or log in to existing account using infracost auth login",
            "parameters": []
          },
          {
            "name": "infracost_comment_github",
            "description": "Post an Infracost comment to GitHub using infracost comment github",
            "parameters": [
              {
                "name": "path",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "repo",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "pull_request",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "github_token",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "behavior",
                "type": "string",
                "description": "",
                "required": false
              }
            ]
          }
        ]
      },
      "inframap": {
        "name": "inframap",
        "description": "Infrastructure visualization",
        "has_variables": false,
        "filename": "inframap.go",
        "tools_count": 2,
        "tools": [
          {
            "name": "inframap_generate",
            "description": "Generate infrastructure graph using inframap generate",
            "parameters": [
              {
                "name": "input",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "format",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "provider",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "hcl",
                "type": "boolean",
                "description": "",
                "required": false
              },
              {
                "name": "tfstate",
                "type": "boolean",
                "description": "",
                "required": false
              },
              {
                "name": "connections",
                "type": "boolean",
                "description": "",
                "required": false
              },
              {
                "name": "raw",
                "type": "boolean",
                "description": "",
                "required": false
              },
              {
                "name": "clean",
                "type": "boolean",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "inframap_prune",
            "description": "Remove unnecessary information from Terraform state/HCL using inframap prune",
            "parameters": [
              {
                "name": "input",
                "type": "string",
                "description": "",
                "required": false
              }
            ]
          }
        ]
      },
      "infrascan": {
        "name": "infrascan",
        "description": "Infrastructure security scanning",
        "has_variables": true,
        "filename": "infrascan.go",
        "tools_count": 3,
        "tools": [
          {
            "name": "infrascan_scan",
            "description": "Scan AWS infrastructure and generate system map using infrascan scan",
            "parameters": [
              {
                "name": "regions",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "output_dir",
                "type": "string",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "infrascan_graph",
            "description": "Generate graph from infrascan scan results using infrascan graph",
            "parameters": [
              {
                "name": "input_dir",
                "type": "string",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "infrascan_render",
            "description": "Render infrastructure graph using infrascan render",
            "parameters": [
              {
                "name": "input_file",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "browser",
                "type": "boolean",
                "description": "",
                "required": false
              }
            ]
          }
        ]
      },
      "k8s-network-policy": {
        "name": "k8s-network-policy",
        "description": "Kubernetes network policy management",
        "has_variables": false,
        "filename": "k8s_network_policy.go",
        "tools_count": 6,
        "tools": [
          {
            "name": "k8s_network_policy_kubectl",
            "description": "Manage network policies using kubectl",
            "parameters": [
              {
                "name": "action",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "resource",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "namespace",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "output",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "kubeconfig",
                "type": "string",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "k8s_network_policy_netfetch_scan",
            "description": "Scan Kubernetes network policies using netfetch",
            "parameters": [
              {
                "name": "namespace",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "target",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "kubeconfig",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "dryrun",
                "type": "boolean",
                "description": "",
                "required": false
              },
              {
                "name": "cilium",
                "type": "boolean",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "k8s_network_policy_netfetch_dash",
            "description": "Launch netfetch dashboard for network policy visualization",
            "parameters": [
              {
                "name": "port",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "kubeconfig",
                "type": "string",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "k8s_network_policy_netpol_eval",
            "description": "Evaluate network connectivity using netpol-analyzer",
            "parameters": [
              {
                "name": "dirpath",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "source",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "destination",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "port",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "verbose",
                "type": "boolean",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "k8s_network_policy_netpol_list",
            "description": "List all allowed connections using netpol-analyzer",
            "parameters": [
              {
                "name": "dirpath",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "verbose",
                "type": "boolean",
                "description": "",
                "required": false
              },
              {
                "name": "quiet",
                "type": "boolean",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "k8s_network_policy_netpol_diff",
            "description": "Compare network policies between two directories using netpol-analyzer",
            "parameters": [
              {
                "name": "dir1",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "dir2",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "output_format",
                "type": "string",
                "description": "",
                "required": false
              }
            ]
          }
        ]
      },
      "kube-bench": {
        "name": "kube-bench",
        "description": "Kubernetes CIS benchmark",
        "has_variables": false,
        "filename": "kube_bench.go",
        "tools_count": 6,
        "tools": [
          {
            "name": "kube_bench_run",
            "description": "Run CIS Kubernetes benchmark using kube-bench",
            "parameters": [
              {
                "name": "targets",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "benchmark",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "version",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "config_dir",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "config",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "outputfile",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "kubeconfig",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "json",
                "type": "boolean",
                "description": "",
                "required": false
              },
              {
                "name": "junit",
                "type": "boolean",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "kube_bench_run_checks",
            "description": "Run specific CIS benchmark checks using kube-bench",
            "parameters": [
              {
                "name": "checks",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "benchmark",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "config_dir",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "outputfile",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "kubeconfig",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "json",
                "type": "boolean",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "kube_bench_run_skip",
            "description": "Run CIS benchmark with skipped checks using kube-bench",
            "parameters": [
              {
                "name": "skip",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "targets",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "benchmark",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "outputfile",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "kubeconfig",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "json",
                "type": "boolean",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "kube_bench_run_custom_output",
            "description": "Run CIS benchmark with custom output format using kube-bench",
            "parameters": [
              {
                "name": "output_format",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "outputfile",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "targets",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "benchmark",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "kubeconfig",
                "type": "string",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "kube_bench_version",
            "description": "Get kube-bench version",
            "parameters": []
          },
          {
            "name": "kube_bench_run_asff",
            "description": "Run CIS benchmark with AWS Security Hub ASFF output using kube-bench",
            "parameters": [
              {
                "name": "aws_account",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "aws_region",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "cluster_arn",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "outputfile",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "kubeconfig",
                "type": "string",
                "description": "",
                "required": false
              }
            ]
          }
        ]
      },
      "kube-hunter": {
        "name": "kube-hunter",
        "description": "Kubernetes penetration testing",
        "has_variables": false,
        "filename": "kube_hunter.go",
        "tools_count": 6,
        "tools": [
          {
            "name": "kube_hunter_remote_scan",
            "description": "Scan remote Kubernetes cluster using kube-hunter",
            "parameters": [
              {
                "name": "remote",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "report",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "log_level",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "active",
                "type": "boolean",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "kube_hunter_cidr_scan",
            "description": "Scan CIDR range for Kubernetes clusters using kube-hunter",
            "parameters": [
              {
                "name": "cidr",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "report",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "active",
                "type": "boolean",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "kube_hunter_interface_scan",
            "description": "Scan network interface using kube-hunter",
            "parameters": [
              {
                "name": "interface",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "report",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "active",
                "type": "boolean",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "kube_hunter_pod_scan",
            "description": "Run kube-hunter as pod in Kubernetes cluster",
            "parameters": [
              {
                "name": "report",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "kubeconfig",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "active",
                "type": "boolean",
                "description": "",
                "required": false
              },
              {
                "name": "quick",
                "type": "boolean",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "kube_hunter_list_tests",
            "description": "List all available kube-hunter tests",
            "parameters": [
              {
                "name": "active",
                "type": "boolean",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "kube_hunter_custom_hunters",
            "description": "Run kube-hunter with specific hunters enabled/disabled",
            "parameters": [
              {
                "name": "target",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "include_hunters",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "exclude_hunters",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "active",
                "type": "boolean",
                "description": "",
                "required": false
              }
            ]
          }
        ]
      },
      "kubescape": {
        "name": "kubescape",
        "description": "Kubernetes security scanner",
        "has_variables": false,
        "filename": "kubescape.go",
        "tools_count": 3,
        "tools": [
          {
            "name": "kubescape_scan_cluster",
            "description": "Scan Kubernetes cluster using Kubescape",
            "parameters": [
              {
                "name": "framework",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "severity_threshold",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "format",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "kubeconfig",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "namespace",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "exclude_kube_system",
                "type": "boolean",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "kubescape_scan_manifests",
            "description": "Scan Kubernetes manifest files using Kubescape",
            "parameters": [
              {
                "name": "path",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "framework",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "severity_threshold",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "format",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "include_helm",
                "type": "boolean",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "kubescape_get_version",
            "description": "Get Kubescape version",
            "parameters": []
          }
        ]
      },
      "kuttl": {
        "name": "kuttl",
        "description": "Kubernetes testing framework",
        "has_variables": false,
        "filename": "kuttl.go",
        "tools_count": 4,
        "tools": [
          {
            "name": "kuttl_test",
            "description": "Run KUTTL tests",
            "parameters": [
              {
                "name": "path",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "kubeconfig",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "config",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "namespace",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "parallel",
                "type": "number",
                "description": "",
                "required": false
              },
              {
                "name": "timeout",
                "type": "number",
                "description": "",
                "required": false
              },
              {
                "name": "skip_delete",
                "type": "boolean",
                "description": "",
                "required": false
              },
              {
                "name": "dry_run",
                "type": "boolean",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "kuttl_test_kind",
            "description": "Run KUTTL tests with kind cluster",
            "parameters": [
              {
                "name": "path",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "kind_config",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "kind_context",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "parallel",
                "type": "number",
                "description": "",
                "required": false
              },
              {
                "name": "skip_cluster_delete",
                "type": "boolean",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "kuttl_version",
            "description": "Get KUTTL version",
            "parameters": []
          },
          {
            "name": "kuttl_help",
            "description": "Get KUTTL help",
            "parameters": [
              {
                "name": "command",
                "type": "string",
                "description": "",
                "required": false
              }
            ]
          }
        ]
      },
      "kyverno": {
        "name": "kyverno",
        "description": "Kubernetes policy management",
        "has_variables": false,
        "filename": "kyverno.go",
        "tools_count": 9,
        "tools": [
          {
            "name": "kyverno_install",
            "description": "Install Kyverno in Kubernetes cluster using Helm",
            "parameters": [
              {
                "name": "namespace",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "kubeconfig",
                "type": "string",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "kyverno_apply",
            "description": "Apply Kyverno policies to cluster",
            "parameters": [
              {
                "name": "policies_path",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "kubeconfig",
                "type": "string",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "kyverno_test",
            "description": "Test Kyverno policies against resources",
            "parameters": [
              {
                "name": "policies_path",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "resources_path",
                "type": "string",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "kyverno_create_cluster_role",
            "description": "Create cluster role for Kyverno",
            "parameters": [
              {
                "name": "kubeconfig",
                "type": "string",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "kyverno_version",
            "description": "Get Kyverno CLI version",
            "parameters": []
          },
          {
            "name": "kyverno_list_policies",
            "description": "List Kyverno policies in cluster",
            "parameters": [
              {
                "name": "namespace",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "kubeconfig",
                "type": "string",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "kyverno_apply_policy_file",
            "description": "Apply Kyverno policy file to cluster using kubectl",
            "parameters": [
              {
                "name": "file",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "namespace",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "kubeconfig",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "dry_run",
                "type": "boolean",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "kyverno_get_policy_reports",
            "description": "Get Kyverno policy reports",
            "parameters": [
              {
                "name": "namespace",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "kubeconfig",
                "type": "string",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "kyverno_status",
            "description": "Get Kyverno installation status",
            "parameters": [
              {
                "name": "namespace",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "kubeconfig",
                "type": "string",
                "description": "",
                "required": false
              }
            ]
          }
        ]
      },
      "kyverno-multitenant": {
        "name": "kyverno-multitenant",
        "description": "Multi-tenant Kyverno policies",
        "has_variables": false,
        "filename": "kyverno_multitenant.go",
        "tools_count": 6,
        "tools": [
          {
            "name": "kyverno_multitenant_create_namespace",
            "description": "Create namespace for tenant with appropriate labels",
            "parameters": [
              {
                "name": "tenant_name",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "namespace",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "kubeconfig",
                "type": "string",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "kyverno_multitenant_namespace_isolation",
            "description": "Apply Kyverno policy for namespace isolation",
            "parameters": [
              {
                "name": "tenant_name",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "kubeconfig",
                "type": "string",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "kyverno_multitenant_create_quota",
            "description": "Create resource quota for tenant namespace",
            "parameters": [
              {
                "name": "namespace",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "cpu_limit",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "memory_limit",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "kubeconfig",
                "type": "string",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "kyverno_multitenant_generate_policy",
            "description": "Generate and apply comprehensive multitenant policies",
            "parameters": [
              {
                "name": "tenants_config",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "kubeconfig",
                "type": "string",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "kyverno_multitenant_list_namespaces",
            "description": "List all tenant namespaces",
            "parameters": [
              {
                "name": "kubeconfig",
                "type": "string",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "kyverno_multitenant_get_policies",
            "description": "Get Kyverno policies for a specific tenant namespace",
            "parameters": [
              {
                "name": "namespace",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "kubeconfig",
                "type": "string",
                "description": "",
                "required": false
              }
            ]
          }
        ]
      },
      "license-detector": {
        "name": "license-detector",
        "description": "Software license detection",
        "has_variables": false,
        "filename": "license_detector.go",
        "tools_count": 9,
        "tools": [
          {
            "name": "license_detector_askalono_identify",
            "description": "Identify license in a file using askalono CLI",
            "parameters": [
              {
                "name": "file_path",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "optimize",
                "type": "boolean",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "license_detector_askalono_crawl",
            "description": "Crawl directory for license files using askalono CLI",
            "parameters": [
              {
                "name": "directory",
                "type": "string",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "license_detector_scanner_file",
            "description": "Scan specific file using CycloneDX license-scanner CLI",
            "parameters": [
              {
                "name": "file_path",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "show_copyrights",
                "type": "boolean",
                "description": "",
                "required": false
              },
              {
                "name": "show_hash",
                "type": "boolean",
                "description": "",
                "required": false
              },
              {
                "name": "show_keywords",
                "type": "boolean",
                "description": "",
                "required": false
              },
              {
                "name": "debug",
                "type": "boolean",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "license_detector_scanner_directory",
            "description": "Scan directory using CycloneDX license-scanner CLI",
            "parameters": [
              {
                "name": "directory",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "show_copyrights",
                "type": "boolean",
                "description": "",
                "required": false
              },
              {
                "name": "show_hash",
                "type": "boolean",
                "description": "",
                "required": false
              },
              {
                "name": "quiet",
                "type": "boolean",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "license_detector_scanner_list",
            "description": "List available licenses in CycloneDX license-scanner",
            "parameters": []
          },
          {
            "name": "license_detector_go_detector",
            "description": "Detect licenses using go-license-detector CLI",
            "parameters": [
              {
                "name": "project_path",
                "type": "string",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "license_detector_licensefinder_scan",
            "description": "Scan project for licenses using License Finder",
            "parameters": [
              {
                "name": "project_path",
                "type": "string",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "license_detector_licensefinder_report",
            "description": "Generate license report using License Finder",
            "parameters": [
              {
                "name": "project_path",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "format",
                "type": "string",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "license_detector_licensefinder_action_items",
            "description": "Get action items for license compliance using License Finder",
            "parameters": [
              {
                "name": "project_path",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "allowed_licenses",
                "type": "string",
                "description": "",
                "required": false
              }
            ]
          }
        ]
      },
      "litmus": {
        "name": "litmus",
        "description": "Chaos engineering for Kubernetes",
        "has_variables": false,
        "filename": "litmus.go",
        "tools_count": 12,
        "tools": [
          {
            "name": "litmus_install",
            "description": "Install Litmus chaos engineering platform using Helm",
            "parameters": [
              {
                "name": "namespace",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "release_name",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "create_namespace",
                "type": "boolean",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "litmus_connect_chaos_infra",
            "description": "Connect chaos infrastructure using litmusctl",
            "parameters": [
              {
                "name": "project_id",
                "type": "string",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "litmus_create_project",
            "description": "Create a new Litmus project using litmusctl",
            "parameters": []
          },
          {
            "name": "litmus_create_chaos_experiment",
            "description": "Create chaos experiment using litmusctl",
            "parameters": [
              {
                "name": "manifest_file",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "project_id",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "chaos_infra_id",
                "type": "string",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "litmus_run_chaos_experiment",
            "description": "Run chaos experiment using litmusctl",
            "parameters": [
              {
                "name": "experiment_id",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "project_id",
                "type": "string",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "litmus_get_projects",
            "description": "Get all Litmus projects using litmusctl",
            "parameters": []
          },
          {
            "name": "litmus_get_chaos_experiments",
            "description": "Get chaos experiments using litmusctl",
            "parameters": [
              {
                "name": "kubeconfig",
                "type": "string",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "litmus_get_chaos_infra",
            "description": "Get chaos infrastructure using litmusctl",
            "parameters": [
              {
                "name": "project_id",
                "type": "string",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "litmus_config_set_account",
            "description": "Configure account using litmusctl",
            "parameters": []
          },
          {
            "name": "litmus_version",
            "description": "Get Litmus CLI version using litmusctl",
            "parameters": []
          },
          {
            "name": "litmus_apply_chaos_experiment",
            "description": "Apply chaos experiment manifest using kubectl",
            "parameters": [
              {
                "name": "manifest_file",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "namespace",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "kubeconfig",
                "type": "string",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "litmus_get_chaos_results",
            "description": "Get chaos experiment results using litmusctl",
            "parameters": [
              {
                "name": "experiment_name",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "kubeconfig",
                "type": "string",
                "description": "",
                "required": false
              }
            ]
          }
        ]
      },
      "nikto": {
        "name": "nikto",
        "description": "Web server security scanner",
        "has_variables": false,
        "filename": "nikto.go",
        "tools_count": 11,
        "tools": [
          {
            "name": "nikto_scan_host",
            "description": "Scan web host for vulnerabilities using nikto",
            "parameters": [
              {
                "name": "host",
                "type": "string",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "nikto_scan_ssl",
            "description": "Scan HTTPS host with SSL/TLS using nikto",
            "parameters": [
              {
                "name": "host",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "port",
                "type": "number",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "nikto_scan_tuning",
            "description": "Scan with specific vulnerability tuning using nikto",
            "parameters": [
              {
                "name": "host",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "tuning",
                "type": "string",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "nikto_scan_hosts_file",
            "description": "Scan multiple hosts from file using nikto",
            "parameters": [
              {
                "name": "hosts_file",
                "type": "string",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "nikto_scan_auth",
            "description": "Scan with basic authentication using nikto",
            "parameters": [
              {
                "name": "host",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "auth_method",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "credentials",
                "type": "string",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "nikto_scan_proxy",
            "description": "Scan through proxy using nikto",
            "parameters": [
              {
                "name": "host",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "proxy_host",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "proxy_port",
                "type": "string",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "nikto_scan_evasion",
            "description": "Scan with evasion techniques using nikto",
            "parameters": [
              {
                "name": "host",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "evasion_level",
                "type": "string",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "nikto_database_check",
            "description": "Check Nikto scan database for errors using nikto",
            "parameters": []
          },
          {
            "name": "nikto_update",
            "description": "Update Nikto database using nikto",
            "parameters": []
          },
          {
            "name": "nikto_version",
            "description": "Get Nikto version information using nikto",
            "parameters": []
          },
          {
            "name": "nikto_find_only",
            "description": "Find HTTP(S) ports without performing security scan using nikto",
            "parameters": [
              {
                "name": "host",
                "type": "string",
                "description": "",
                "required": false
              }
            ]
          }
        ]
      },
      "nmap": {
        "name": "nmap",
        "description": "Network exploration and security auditing",
        "has_variables": false,
        "filename": "nmap.go",
        "tools_count": 7,
        "tools": [
          {
            "name": "nmap_scan_host",
            "description": "Perform basic host scanning",
            "parameters": [
              {
                "name": "target",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "scan_type",
                "type": "string",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "nmap_port_scan",
            "description": "Scan specific ports on a host",
            "parameters": [
              {
                "name": "target",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "ports",
                "type": "string",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "nmap_service_detection",
            "description": "Detect services and versions running on target",
            "parameters": [
              {
                "name": "target",
                "type": "string",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "nmap_vulnerability_scan",
            "description": "Scan for vulnerabilities using NSE scripts",
            "parameters": [
              {
                "name": "target",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "script_category",
                "type": "string",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "nmap_network_discovery",
            "description": "Discover hosts on a network",
            "parameters": [
              {
                "name": "network",
                "type": "string",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "nmap_script_scan",
            "description": "Run specific NSE scripts",
            "parameters": [
              {
                "name": "target",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "script",
                "type": "string",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "nmap_get_version",
            "description": "Get Nmap version",
            "parameters": []
          }
        ]
      },
      "nuclei": {
        "name": "nuclei",
        "description": "Fast vulnerability scanner with community templates",
        "has_variables": false,
        "filename": "nuclei.go",
        "tools_count": 6,
        "tools": [
          {
            "name": "nuclei_scan_url",
            "description": "Scan a URL for vulnerabilities using Nuclei templates",
            "parameters": [
              {
                "name": "url",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "severity",
                "type": "string",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "nuclei_scan_with_template",
            "description": "Scan using specific Nuclei template(s)",
            "parameters": [
              {
                "name": "url",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "template",
                "type": "string",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "nuclei_scan_with_tags",
            "description": "Scan using specific vulnerability tags",
            "parameters": [
              {
                "name": "url",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "tags",
                "type": "string",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "nuclei_update_templates",
            "description": "Update Nuclei vulnerability templates",
            "parameters": []
          },
          {
            "name": "nuclei_validate_template",
            "description": "Validate a Nuclei template",
            "parameters": [
              {
                "name": "template_path",
                "type": "string",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "nuclei_generate_report",
            "description": "Generate a vulnerability scan report",
            "parameters": [
              {
                "name": "url",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "report_type",
                "type": "string",
                "description": "",
                "required": false
              }
            ]
          }
        ]
      },
      "openinfraquote": {
        "name": "openinfraquote",
        "description": "Infrastructure cost estimation",
        "has_variables": true,
        "filename": "openinfraquote.go",
        "tools_count": 10,
        "tools": [
          {
            "name": "openinfraquote_match",
            "description": "Match Terraform plan/state JSON to pricing rows using oiq match",
            "parameters": [
              {
                "name": "plan_or_state_json_path",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "pricesheet_path",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "output_path",
                "type": "string",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "openinfraquote_price",
            "description": "Calculate prices from matched resources using oiq price",
            "parameters": [
              {
                "name": "matched_input_path",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "region",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "usage_path",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "format",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "mq",
                "type": "string",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "openinfraquote_download_pricesheet",
            "description": "Download AWS pricing data CSV from oiq.terrateam.io",
            "parameters": [
              {
                "name": "dest_path",
                "type": "string",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "openinfraquote_print_default_usage",
            "description": "Print default usage assumptions for cost estimation",
            "parameters": []
          },
          {
            "name": "openinfraquote_compare_regions",
            "description": "Compare costs across multiple AWS regions",
            "parameters": [
              {
                "name": "plan_file",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "regions",
                "type": "string",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "openinfraquote_cost_gate",
            "description": "Enforce cost policies on OIQ JSON output",
            "parameters": [
              {
                "name": "report_json",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "max_total_usd",
                "type": "number",
                "description": "",
                "required": false
              },
              {
                "name": "max_monthly_delta_usd",
                "type": "number",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "openinfraquote_help",
            "description": "Get OpenInfraQuote help information using oiq",
            "parameters": []
          },
          {
            "name": "openinfraquote_analyze_directory",
            "description": "Analyze all Terraform files in a directory - automatically generates plan, downloads pricesheet, and estimates costs",
            "parameters": [
              {
                "name": "directory",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "region",
                "type": "string",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "openinfraquote_analyze_plan",
            "description": "Analyze an existing Terraform plan JSON file - automatically downloads pricesheet and estimates costs",
            "parameters": [
              {
                "name": "plan_file",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "region",
                "type": "string",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "openinfraquote_full_pipeline",
            "description": "Run full cost estimation pipeline using oiq (requires existing tfplan.json and pricesheet)",
            "parameters": [
              {
                "name": "tfplan_json",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "pricesheet",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "region",
                "type": "string",
                "description": "",
                "required": false
              }
            ]
          }
        ]
      },
      "openscap": {
        "name": "openscap",
        "description": "Security compliance scanning",
        "has_variables": false,
        "filename": "openscap.go",
        "tools_count": 10,
        "tools": [
          {
            "name": "openscap_xccdf_eval",
            "description": "Evaluate XCCDF content for security compliance using oscap",
            "parameters": [
              {
                "name": "xccdf_file",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "profile",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "results_file",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "report_file",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "cpe_file",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "fetch_remote_resources",
                "type": "boolean",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "openscap_oval_eval",
            "description": "Evaluate OVAL definitions using oscap",
            "parameters": [
              {
                "name": "oval_file",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "results_file",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "variables_file",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "definition_id",
                "type": "string",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "openscap_xccdf_generate_report",
            "description": "Generate HTML report from XCCDF results using oscap",
            "parameters": [
              {
                "name": "results_file",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "output_file",
                "type": "string",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "openscap_xccdf_generate_guide",
            "description": "Generate HTML guide from XCCDF content using oscap",
            "parameters": [
              {
                "name": "xccdf_file",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "profile",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "output_file",
                "type": "string",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "openscap_ds_validate",
            "description": "Validate Source DataStream file using oscap",
            "parameters": [
              {
                "name": "datastream_file",
                "type": "string",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "openscap_validate",
            "description": "Validate SCAP content (XCCDF, OVAL, CPE, CVE) using oscap",
            "parameters": [
              {
                "name": "content_file",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "content_type",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "schematron",
                "type": "boolean",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "openscap_info",
            "description": "Display information about SCAP content using oscap",
            "parameters": [
              {
                "name": "content_file",
                "type": "string",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "openscap_xccdf_remediate",
            "description": "Apply remediation based on XCCDF results using oscap",
            "parameters": [
              {
                "name": "results_file",
                "type": "string",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "openscap_oval_generate_report",
            "description": "Generate report from OVAL results using oscap",
            "parameters": [
              {
                "name": "oval_results_file",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "output_file",
                "type": "string",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "openscap_ds_split",
            "description": "Split DataStream into component files using oscap",
            "parameters": [
              {
                "name": "datastream_file",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "output_dir",
                "type": "string",
                "description": "",
                "required": false
              }
            ]
          }
        ]
      },
      "ossf-scorecard": {
        "name": "ossf-scorecard",
        "description": "OSSF security scorecard",
        "has_variables": false,
        "filename": "ossf_scorecard.go",
        "tools_count": 4,
        "tools": [
          {
            "name": "ossf_scorecard_score_repository",
            "description": "Score repository security using OSSF Scorecard",
            "parameters": [
              {
                "name": "repo_url",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "github_token",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "format",
                "type": "string",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "ossf_scorecard_score_checks",
            "description": "Score repository with specific security checks",
            "parameters": [
              {
                "name": "repo_url",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "checks",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "github_token",
                "type": "string",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "ossf_scorecard_list_checks",
            "description": "List all available OSSF Scorecard security checks",
            "parameters": []
          },
          {
            "name": "ossf_scorecard_get_version",
            "description": "Get OSSF Scorecard version information",
            "parameters": []
          }
        ]
      },
      "osv-scanner": {
        "name": "osv-scanner",
        "description": "Open Source Vulnerability scanning",
        "has_variables": false,
        "filename": "osv_scanner.go",
        "tools_count": 11,
        "tools": [
          {
            "name": "osv_scan",
            "description": "OSV-Scanner over source/SBOM/image; optional license allowlist",
            "parameters": [
              {
                "name": "mode",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "path_or_ref",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "format",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "licenses_allowlist",
                "type": "string",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "osv_scanner_scan_source",
            "description": "Scan source directory for open source vulnerabilities using osv-scanner",
            "parameters": [
              {
                "name": "directory",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "output",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "format",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "config",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "recursive",
                "type": "boolean",
                "description": "",
                "required": false
              },
              {
                "name": "licenses",
                "type": "boolean",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "osv_scanner_scan_image",
            "description": "Scan container image for vulnerabilities using osv-scanner",
            "parameters": [
              {
                "name": "image",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "output",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "format",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "config",
                "type": "string",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "osv_scanner_scan_lockfile",
            "description": "Scan specific lockfile for vulnerabilities using osv-scanner",
            "parameters": [
              {
                "name": "lockfile_path",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "output",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "format",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "all_packages",
                "type": "boolean",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "osv_scanner_scan_manifest",
            "description": "Scan package manifest file for vulnerabilities using osv-scanner",
            "parameters": [
              {
                "name": "manifest_path",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "output",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "format",
                "type": "string",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "osv_scanner_license_scan",
            "description": "Scan for license compliance using osv-scanner",
            "parameters": [
              {
                "name": "path",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "allowed_licenses",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "output",
                "type": "string",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "osv_scanner_offline_scan",
            "description": "Scan using offline vulnerability databases with osv-scanner",
            "parameters": [
              {
                "name": "path",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "offline_db_path",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "download_databases",
                "type": "boolean",
                "description": "",
                "required": false
              },
              {
                "name": "recursive",
                "type": "boolean",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "osv_scanner_fix",
            "description": "Apply guided remediation for vulnerabilities using osv-scanner",
            "parameters": [
              {
                "name": "manifest_path",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "lockfile_path",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "strategy",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "max_depth",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "min_severity",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "ignore_dev",
                "type": "boolean",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "osv_scanner_serve_report",
            "description": "Generate and serve HTML vulnerability report locally using osv-scanner",
            "parameters": [
              {
                "name": "path",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "port",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "recursive",
                "type": "boolean",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "osv_scanner_scan_sbom",
            "description": "Scan SBOM file for vulnerabilities using osv-scanner",
            "parameters": [
              {
                "name": "sbom_path",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "output",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "format",
                "type": "string",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "osv_scanner_verbose_scan",
            "description": "Run OSV Scanner with verbose logging using osv-scanner",
            "parameters": [
              {
                "name": "path",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "verbosity",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "recursive",
                "type": "boolean",
                "description": "",
                "required": false
              }
            ]
          }
        ]
      },
      "packer": {
        "name": "packer",
        "description": "Machine image building",
        "has_variables": true,
        "filename": "packer.go",
        "tools_count": 10,
        "tools": [
          {
            "name": "packer_build",
            "description": "Build machine images using real packer CLI",
            "parameters": [
              {
                "name": "template_file",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "var",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "var_file",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "only",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "except",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "parallel_builds",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "on_error",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "force",
                "type": "boolean",
                "description": "",
                "required": false
              },
              {
                "name": "debug",
                "type": "boolean",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "packer_validate",
            "description": "Validate Packer configuration template using real packer CLI",
            "parameters": [
              {
                "name": "template_file",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "var",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "var_file",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "only",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "except",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "syntax_only",
                "type": "boolean",
                "description": "",
                "required": false
              },
              {
                "name": "evaluate_datasources",
                "type": "boolean",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "packer_inspect",
            "description": "Inspect and analyze Packer template configuration using real packer CLI",
            "parameters": [
              {
                "name": "template_file",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "machine_readable",
                "type": "boolean",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "packer_fix",
            "description": "Fix and upgrade Packer template to current version using real packer CLI",
            "parameters": [
              {
                "name": "template_file",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "validate",
                "type": "boolean",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "packer_console",
            "description": "Open Packer console for template debugging using real packer CLI",
            "parameters": [
              {
                "name": "template_file",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "var",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "var_file",
                "type": "string",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "packer_fmt",
            "description": "Format Packer template files using real packer CLI",
            "parameters": [
              {
                "name": "path",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "check",
                "type": "boolean",
                "description": "",
                "required": false
              },
              {
                "name": "diff",
                "type": "boolean",
                "description": "",
                "required": false
              },
              {
                "name": "write",
                "type": "boolean",
                "description": "",
                "required": false
              },
              {
                "name": "recursive",
                "type": "boolean",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "packer_init",
            "description": "Initialize Packer configuration and install required plugins using real packer CLI",
            "parameters": [
              {
                "name": "config_file",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "upgrade",
                "type": "boolean",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "packer_plugins",
            "description": "Manage Packer plugins using real packer CLI",
            "parameters": [
              {
                "name": "subcommand",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "plugin_name",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "version",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "config_file",
                "type": "string",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "packer_hcl2_upgrade",
            "description": "Upgrade JSON Packer template to HCL2 using real packer CLI",
            "parameters": [
              {
                "name": "template_file",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "output_file",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "with_annotations",
                "type": "boolean",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "packer_version",
            "description": "Get Packer version information using real packer CLI",
            "parameters": [
              {
                "name": "machine_readable",
                "type": "boolean",
                "description": "",
                "required": false
              }
            ]
          }
        ]
      },
      "parliament": {
        "name": "parliament",
        "description": "AWS IAM policy linter",
        "has_variables": true,
        "filename": "parliament.go",
        "tools_count": 9,
        "tools": [
          {
            "name": "parliament_lint_file",
            "description": "Lint AWS IAM policy file using real parliament CLI",
            "parameters": [
              {
                "name": "policy_path",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "config",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "json_output",
                "type": "boolean",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "parliament_lint_directory",
            "description": "Lint AWS IAM policy files in directory using real parliament CLI",
            "parameters": [
              {
                "name": "directory",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "config",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "include_policy_extension",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "exclude_pattern",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "json_output",
                "type": "boolean",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "parliament_lint_string",
            "description": "Lint AWS IAM policy JSON string using real parliament CLI",
            "parameters": [
              {
                "name": "policy_json",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "config",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "json_output",
                "type": "boolean",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "parliament_lint_community",
            "description": "Lint AWS IAM policy with community auditors using real parliament CLI",
            "parameters": [
              {
                "name": "policy_path",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "config",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "json_output",
                "type": "boolean",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "parliament_lint_private",
            "description": "Lint AWS IAM policy with private auditors using real parliament CLI",
            "parameters": [
              {
                "name": "policy_path",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "private_auditors",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "config",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "json_output",
                "type": "boolean",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "parliament_lint_aws_managed",
            "description": "Lint AWS managed policies using real parliament CLI",
            "parameters": [
              {
                "name": "config",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "json_output",
                "type": "boolean",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "parliament_lint_auth_details",
            "description": "Lint AWS IAM authorization details file using real parliament CLI",
            "parameters": [
              {
                "name": "auth_details_file",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "config",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "json_output",
                "type": "boolean",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "parliament_comprehensive_analysis",
            "description": "Comprehensive IAM policy analysis with all auditors using real parliament CLI",
            "parameters": [
              {
                "name": "policy_path",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "private_auditors",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "config",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "json_output",
                "type": "boolean",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "parliament_batch_directory_analysis",
            "description": "Batch analysis of multiple policy directories using real parliament CLI",
            "parameters": [
              {
                "name": "base_directory",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "config",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "private_auditors",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "include_policy_extension",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "exclude_pattern",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "json_output",
                "type": "boolean",
                "description": "",
                "required": false
              }
            ]
          }
        ]
      },
      "pmapper": {
        "name": "pmapper",
        "description": "AWS IAM privilege escalation analysis",
        "has_variables": true,
        "filename": "pmapper.go",
        "tools_count": 6,
        "tools": [
          {
            "name": "pmapper_graph_create",
            "description": "Create IAM privilege graph using real pmapper CLI",
            "parameters": [
              {
                "name": "profile",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "account",
                "type": "string",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "pmapper_query",
            "description": "Query IAM permissions using real pmapper CLI",
            "parameters": [
              {
                "name": "query_string",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "profile",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "account",
                "type": "string",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "pmapper_query_privesc",
            "description": "Find privilege escalation paths using real pmapper CLI preset query",
            "parameters": [
              {
                "name": "target",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "profile",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "account",
                "type": "string",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "pmapper_visualize",
            "description": "Visualize IAM privilege graph using real pmapper CLI",
            "parameters": [
              {
                "name": "filetype",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "profile",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "account",
                "type": "string",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "pmapper_query_who_can",
            "description": "Query who can perform specific action using real pmapper CLI",
            "parameters": [
              {
                "name": "action",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "profile",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "account",
                "type": "string",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "pmapper_argquery",
            "description": "Advanced query with conditions using real pmapper CLI",
            "parameters": [
              {
                "name": "action",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "condition",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "profile",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "account",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "skip_admin",
                "type": "boolean",
                "description": "",
                "required": false
              }
            ]
          }
        ]
      },
      "policy-sentry": {
        "name": "policy-sentry",
        "description": "AWS IAM policy generator",
        "has_variables": true,
        "filename": "policy_sentry.go",
        "tools_count": 7,
        "tools": [
          {
            "name": "policy_sentry_create_template",
            "description": "Create IAM policy template using real policy_sentry CLI",
            "parameters": [
              {
                "name": "template_type",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "output_file",
                "type": "string",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "policy_sentry_write_policy",
            "description": "Write IAM policy from input YAML file using real policy_sentry CLI",
            "parameters": [
              {
                "name": "input_file",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "format",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "minimize",
                "type": "boolean",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "policy_sentry_initialize",
            "description": "Initialize Policy Sentry IAM database using real policy_sentry CLI",
            "parameters": [
              {
                "name": "fetch",
                "type": "boolean",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "policy_sentry_query_action_table",
            "description": "Query AWS service action table using real policy_sentry CLI",
            "parameters": [
              {
                "name": "service",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "name",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "access_level",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "condition",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "resource_type",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "format",
                "type": "string",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "policy_sentry_query_condition_table",
            "description": "Query AWS service condition table using real policy_sentry CLI",
            "parameters": [
              {
                "name": "service",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "name",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "format",
                "type": "string",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "policy_sentry_query_arn_table",
            "description": "Query AWS service ARN table using real policy_sentry CLI",
            "parameters": [
              {
                "name": "service",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "name",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "format",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "list_arn_types",
                "type": "boolean",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "policy_sentry_query_service_table",
            "description": "Query AWS service table using real policy_sentry CLI",
            "parameters": [
              {
                "name": "format",
                "type": "string",
                "description": "",
                "required": false
              }
            ]
          }
        ]
      },
      "powerpipe": {
        "name": "powerpipe",
        "description": "Infrastructure benchmarking",
        "has_variables": true,
        "filename": "powerpipe.go",
        "tools_count": 7,
        "tools": [
          {
            "name": "powerpipe_benchmark_run",
            "description": "Run security and compliance benchmarks using real powerpipe CLI",
            "parameters": [
              {
                "name": "benchmark",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "output",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "mod_location",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "workspace",
                "type": "string",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "powerpipe_benchmark_list",
            "description": "List available benchmarks using real powerpipe CLI",
            "parameters": [
              {
                "name": "output",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "mod_location",
                "type": "string",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "powerpipe_query_run",
            "description": "Execute SQL queries against cloud infrastructure using real powerpipe CLI",
            "parameters": [
              {
                "name": "query",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "output",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "mod_location",
                "type": "string",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "powerpipe_query_list",
            "description": "List available queries using real powerpipe CLI",
            "parameters": [
              {
                "name": "output",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "mod_location",
                "type": "string",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "powerpipe_server",
            "description": "Start Powerpipe server using real powerpipe CLI",
            "parameters": [
              {
                "name": "listen",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "mod_location",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "workspace",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "port",
                "type": "number",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "powerpipe_dashboard_list",
            "description": "List available dashboards using real powerpipe CLI",
            "parameters": [
              {
                "name": "output",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "mod_location",
                "type": "string",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "powerpipe_version",
            "description": "Get Powerpipe version information using real powerpipe CLI",
            "parameters": []
          }
        ]
      },
      "prowler": {
        "name": "prowler",
        "description": "Multi-cloud security assessment",
        "has_variables": true,
        "filename": "prowler.go",
        "tools_count": 8,
        "tools": [
          {
            "name": "prowler_aws",
            "description": "Scan AWS account for security issues using real prowler CLI",
            "parameters": [
              {
                "name": "profile",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "regions",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "checks",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "services",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "compliance",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "output_formats",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "output_directory",
                "type": "string",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "prowler_azure",
            "description": "Scan Azure subscription for security issues using real prowler CLI",
            "parameters": [
              {
                "name": "subscription_id",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "checks",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "services",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "compliance",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "output_formats",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "output_directory",
                "type": "string",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "prowler_gcp",
            "description": "Scan GCP project for security issues using real prowler CLI",
            "parameters": [
              {
                "name": "project_id",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "checks",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "services",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "compliance",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "output_formats",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "output_directory",
                "type": "string",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "prowler_kubernetes",
            "description": "Scan Kubernetes cluster for security issues using real prowler CLI",
            "parameters": [
              {
                "name": "kubeconfig_path",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "context",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "checks",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "compliance",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "output_formats",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "output_directory",
                "type": "string",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "prowler_list_checks",
            "description": "List available security checks using real prowler CLI",
            "parameters": [
              {
                "name": "provider",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "service",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "compliance",
                "type": "string",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "prowler_list_services",
            "description": "List available services using real prowler CLI",
            "parameters": [
              {
                "name": "provider",
                "type": "string",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "prowler_list_compliance",
            "description": "List available compliance frameworks using real prowler CLI",
            "parameters": [
              {
                "name": "provider",
                "type": "string",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "prowler_dashboard",
            "description": "Launch Prowler dashboard using real prowler CLI",
            "parameters": [
              {
                "name": "port",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "host",
                "type": "string",
                "description": "",
                "required": false
              }
            ]
          }
        ]
      },
      "rekor": {
        "name": "rekor",
        "description": "Transparency log",
        "has_variables": false,
        "filename": "rekor.go",
        "tools_count": 7,
        "tools": [
          {
            "name": "rekor_upload_artifact",
            "description": "Upload artifact to Rekor transparency log using real rekor-cli",
            "parameters": [
              {
                "name": "artifact",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "signature",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "public_key",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "type",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "pki_format",
                "type": "string",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "rekor_search_log",
            "description": "Search Rekor transparency log using real rekor-cli",
            "parameters": [
              {
                "name": "artifact",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "public_key",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "sha",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "email",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "pki_format",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "operator",
                "type": "string",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "rekor_get_by_uuid",
            "description": "Get entry from Rekor transparency log by UUID using real rekor-cli",
            "parameters": [
              {
                "name": "uuid",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "format",
                "type": "string",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "rekor_get_by_index",
            "description": "Get entry from Rekor transparency log by log index using real rekor-cli",
            "parameters": [
              {
                "name": "log_index",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "format",
                "type": "string",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "rekor_verify_by_uuid",
            "description": "Verify entry in Rekor transparency log by UUID using real rekor-cli",
            "parameters": [
              {
                "name": "uuid",
                "type": "string",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "rekor_verify_by_index",
            "description": "Verify entry in Rekor transparency log by log index using real rekor-cli",
            "parameters": [
              {
                "name": "log_index",
                "type": "string",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "rekor_verify_artifact",
            "description": "Verify artifact in Rekor transparency log using real rekor-cli",
            "parameters": [
              {
                "name": "artifact",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "signature",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "public_key",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "type",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "pki_format",
                "type": "string",
                "description": "",
                "required": false
              }
            ]
          }
        ]
      },
      "scancode": {
        "name": "scancode",
        "description": "License and copyright detection",
        "has_variables": false,
        "filename": "scancode.go",
        "tools_count": 3,
        "tools": [
          {
            "name": "scancode_licenses",
            "description": "High-accuracy license detection over a path; output pretty JSON",
            "parameters": [
              {
                "name": "path",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "output_path",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "extra_flags",
                "type": "string",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "scancode_help",
            "description": "Get ScanCode help information",
            "parameters": []
          },
          {
            "name": "scancode_version",
            "description": "Get ScanCode version information",
            "parameters": []
          }
        ]
      },
      "scout-suite": {
        "name": "scout-suite",
        "description": "Multi-cloud security auditing",
        "has_variables": true,
        "filename": "scout_suite.go",
        "tools_count": 5,
        "tools": [
          {
            "name": "scout_suite_scan_aws",
            "description": "Scan AWS environment for security issues using real scout CLI",
            "parameters": [
              {
                "name": "profile",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "regions",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "services",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "report_dir",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "exceptions",
                "type": "string",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "scout_suite_scan_azure",
            "description": "Scan Azure environment for security issues using real scout CLI",
            "parameters": [
              {
                "name": "subscriptions",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "tenant_id",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "username",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "password",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "report_dir",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "cli",
                "type": "boolean",
                "description": "",
                "required": false
              },
              {
                "name": "service_principal",
                "type": "boolean",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "scout_suite_scan_gcp",
            "description": "Scan Google Cloud Platform for security issues using real scout CLI",
            "parameters": [
              {
                "name": "project_id",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "folder_id",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "organization_id",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "service_account",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "report_dir",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "user_account",
                "type": "boolean",
                "description": "",
                "required": false
              },
              {
                "name": "all_projects",
                "type": "boolean",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "scout_suite_serve_report",
            "description": "Serve Scout Suite report using real scout CLI",
            "parameters": [
              {
                "name": "provider",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "report_name",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "host",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "port",
                "type": "string",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "scout_suite_help",
            "description": "Get Scout Suite help information using real scout CLI",
            "parameters": [
              {
                "name": "provider",
                "type": "string",
                "description": "",
                "required": false
              }
            ]
          }
        ]
      },
      "semgrep": {
        "name": "semgrep",
        "description": "Static analysis for security",
        "has_variables": false,
        "filename": "semgrep.go",
        "tools_count": 11,
        "tools": [
          {
            "name": "semgrep_security_audit_scan",
            "description": "Comprehensive security audit scan using Semgrep",
            "parameters": [
              {
                "name": "target",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "ruleset",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "severity",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "output_format",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "output_file",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "exclude_paths",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "verbose",
                "type": "boolean",
                "description": "",
                "required": false
              },
              {
                "name": "fail_on_findings",
                "type": "boolean",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "semgrep_language_specific_scan",
            "description": "Language-specific security analysis with Semgrep",
            "parameters": [
              {
                "name": "target",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "language",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "security_category",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "output_format",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "confidence",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "include_experimental",
                "type": "boolean",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "semgrep_cicd_integration_scan",
            "description": "Optimized Semgrep scan for CI/CD pipelines",
            "parameters": [
              {
                "name": "target",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "baseline_ref",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "output_format",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "output_file",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "config_policy",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "timeout",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "diff_aware",
                "type": "boolean",
                "description": "",
                "required": false
              },
              {
                "name": "fail_open",
                "type": "boolean",
                "description": "",
                "required": false
              },
              {
                "name": "quiet",
                "type": "boolean",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "semgrep_custom_rule_management",
            "description": "Manage and validate custom Semgrep rules",
            "parameters": [
              {
                "name": "action",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "rules_path",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "target",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "test_files",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "output_format",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "strict",
                "type": "boolean",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "semgrep_performance_optimized_scan",
            "description": "High-performance Semgrep scan with optimization features",
            "parameters": [
              {
                "name": "target",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "config_policy",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "max_memory",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "max_target_bytes",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "jobs",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "timeout",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "exclude_patterns",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "enable_metrics",
                "type": "boolean",
                "description": "",
                "required": false
              },
              {
                "name": "optimizations",
                "type": "boolean",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "semgrep_scan_secrets",
            "description": "Specialized secrets scanning using Semgrep",
            "parameters": [
              {
                "name": "directory",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "output_format",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "exclude_patterns",
                "type": "string",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "semgrep_scan_owasp_top10",
            "description": "Scan for OWASP Top 10 vulnerabilities using Semgrep",
            "parameters": [
              {
                "name": "directory",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "output_format",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "language_focus",
                "type": "string",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "semgrep_vulnerability_research",
            "description": "Advanced vulnerability research and pattern discovery with Semgrep",
            "parameters": [
              {
                "name": "target",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "research_mode",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "language_focus",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "vulnerability_types",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "output_format",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "include_experimental",
                "type": "boolean",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "semgrep_compliance_scanning",
            "description": "Compliance-focused security scanning with Semgrep",
            "parameters": [
              {
                "name": "target",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "compliance_framework",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "industry_focus",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "output_format",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "output_file",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "severity_threshold",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "include_remediation",
                "type": "boolean",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "semgrep_comprehensive_reporting",
            "description": "Generate comprehensive security analysis reports with Semgrep",
            "parameters": [
              {
                "name": "target",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "report_type",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "output_formats",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "output_directory",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "baseline_comparison",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "include_metrics",
                "type": "boolean",
                "description": "",
                "required": false
              },
              {
                "name": "include_trends",
                "type": "boolean",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "semgrep_get_version",
            "description": "Get Semgrep version and configuration information",
            "parameters": []
          }
        ]
      },
      "sigstore-policy-controller": {
        "name": "sigstore-policy-controller",
        "description": "Sigstore policy enforcement",
        "has_variables": false,
        "filename": "sigstore_policy_controller.go",
        "tools_count": 9,
        "tools": [
          {
            "name": "sigstore_test_policy",
            "description": "Test Sigstore policy against container image using real policy-controller-tester",
            "parameters": [
              {
                "name": "policy",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "image",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "resource",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "trustroot",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "log_level",
                "type": "string",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "sigstore_tester_version",
            "description": "Get policy-controller-tester version",
            "parameters": []
          },
          {
            "name": "sigstore_create_policy",
            "description": "Create ClusterImagePolicy using kubectl",
            "parameters": [
              {
                "name": "policy_file",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "namespace",
                "type": "string",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "sigstore_list_policies",
            "description": "List ClusterImagePolicies using kubectl",
            "parameters": [
              {
                "name": "output",
                "type": "string",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "sigstore_delete_policy",
            "description": "Delete ClusterImagePolicy using kubectl",
            "parameters": [
              {
                "name": "policy_name",
                "type": "string",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "sigstore_enable_namespace",
            "description": "Enable Sigstore policy enforcement for namespace using kubectl",
            "parameters": [
              {
                "name": "namespace",
                "type": "string",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "sigstore_disable_namespace",
            "description": "Disable Sigstore policy enforcement for namespace using kubectl",
            "parameters": [
              {
                "name": "namespace",
                "type": "string",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "sigstore_get_namespace_status",
            "description": "Get Sigstore policy enforcement status for namespace using kubectl",
            "parameters": [
              {
                "name": "namespace",
                "type": "string",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "sigstore_describe_policy",
            "description": "Describe ClusterImagePolicy using kubectl",
            "parameters": [
              {
                "name": "policy_name",
                "type": "string",
                "description": "",
                "required": false
              }
            ]
          }
        ]
      },
      "slsa-verifier": {
        "name": "slsa-verifier",
        "description": "SLSA provenance verification",
        "has_variables": false,
        "filename": "slsa_verifier.go",
        "tools_count": 4,
        "tools": [
          {
            "name": "slsa_verifier_verify_artifact",
            "description": "Verify SLSA provenance for artifact using real slsa-verifier CLI",
            "parameters": [
              {
                "name": "artifact",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "provenance_path",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "source_uri",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "source_tag",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "source_branch",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "builder_id",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "print_provenance",
                "type": "boolean",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "slsa_verifier_verify_image",
            "description": "Verify SLSA provenance for container image using real slsa-verifier CLI",
            "parameters": [
              {
                "name": "image",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "source_uri",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "source_tag",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "source_branch",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "builder_id",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "print_provenance",
                "type": "boolean",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "slsa_verifier_verify_npm_package",
            "description": "Verify SLSA provenance for npm package using real slsa-verifier CLI (experimental)",
            "parameters": [
              {
                "name": "package_tarball",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "attestations_path",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "package_name",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "package_version",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "source_uri",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "print_provenance",
                "type": "boolean",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "slsa_verifier_version",
            "description": "Get SLSA Verifier version information using real slsa-verifier CLI",
            "parameters": []
          }
        ]
      },
      "snyk": {
        "name": "snyk",
        "description": "Developer-first security platform",
        "has_variables": true,
        "filename": "snyk.go",
        "tools_count": 6,
        "tools": [
          {
            "name": "snyk_test_project",
            "description": "Test a project for vulnerabilities",
            "parameters": [
              {
                "name": "directory",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "severity",
                "type": "string",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "snyk_test_container",
            "description": "Test a container image for vulnerabilities",
            "parameters": [
              {
                "name": "image",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "severity",
                "type": "string",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "snyk_test_iac",
            "description": "Test Infrastructure as Code files for security issues",
            "parameters": [
              {
                "name": "directory",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "severity",
                "type": "string",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "snyk_test_code",
            "description": "Test source code for security vulnerabilities (SAST)",
            "parameters": [
              {
                "name": "directory",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "severity",
                "type": "string",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "snyk_generate_sbom",
            "description": "Generate Software Bill of Materials",
            "parameters": [
              {
                "name": "directory",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "format",
                "type": "string",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "snyk_get_version",
            "description": "Get Snyk CLI version",
            "parameters": []
          }
        ]
      },
      "sops": {
        "name": "sops",
        "description": "Secrets management",
        "has_variables": true,
        "filename": "sops.go",
        "tools_count": 6,
        "tools": [
          {
            "name": "sops_encrypt_file",
            "description": "Encrypt file using real SOPS CLI",
            "parameters": [
              {
                "name": "file_path",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "kms_arn",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "pgp_fingerprint",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "age_public_key",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "output_file",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "in_place",
                "type": "boolean",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "sops_decrypt_file",
            "description": "Decrypt file using real SOPS CLI",
            "parameters": [
              {
                "name": "file_path",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "output_file",
                "type": "string",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "sops_update_keys",
            "description": "Update encryption keys for SOPS file using real SOPS CLI",
            "parameters": [
              {
                "name": "file_path",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "add_kms",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "add_pgp",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "add_age",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "in_place",
                "type": "boolean",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "sops_edit_file",
            "description": "Show decrypted content (edit mode not supported in containers) using real SOPS CLI",
            "parameters": [
              {
                "name": "file_path",
                "type": "string",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "sops_version",
            "description": "Get SOPS version information using real SOPS CLI",
            "parameters": []
          },
          {
            "name": "sops_publish_keys",
            "description": "Show public key information using real SOPS CLI",
            "parameters": [
              {
                "name": "key_type",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "key_path",
                "type": "string",
                "description": "",
                "required": false
              }
            ]
          }
        ]
      },
      "steampipe": {
        "name": "steampipe",
        "description": "Cloud asset querying with SQL",
        "has_variables": true,
        "filename": "steampipe.go",
        "tools_count": 10,
        "tools": [
          {
            "name": "steampipe_query",
            "description": "Execute SQL query against cloud resources using real Steampipe CLI",
            "parameters": [
              {
                "name": "query",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "plugin",
                "type": "string",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "steampipe_query_interactive",
            "description": "Start interactive SQL query session (limited in containers) using real Steampipe CLI",
            "parameters": [
              {
                "name": "plugin",
                "type": "string",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "steampipe_plugin_list",
            "description": "List installed and available plugins using real Steampipe CLI",
            "parameters": []
          },
          {
            "name": "steampipe_plugin_install",
            "description": "Install plugin using real Steampipe CLI",
            "parameters": [
              {
                "name": "plugin",
                "type": "string",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "steampipe_plugin_update",
            "description": "Update plugin using real Steampipe CLI",
            "parameters": [
              {
                "name": "plugin",
                "type": "string",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "steampipe_plugin_uninstall",
            "description": "Uninstall plugin using real Steampipe CLI",
            "parameters": [
              {
                "name": "plugin",
                "type": "string",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "steampipe_service_start",
            "description": "Start Steampipe service using real Steampipe CLI",
            "parameters": [
              {
                "name": "port",
                "type": "number",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "steampipe_service_status",
            "description": "Check Steampipe service status using real Steampipe CLI",
            "parameters": []
          },
          {
            "name": "steampipe_service_stop",
            "description": "Stop Steampipe service using real Steampipe CLI",
            "parameters": []
          },
          {
            "name": "steampipe_version",
            "description": "Get Steampipe version information using real Steampipe CLI",
            "parameters": []
          }
        ]
      },
      "step-ca": {
        "name": "step-ca",
        "description": "Certificate authority operations",
        "has_variables": false,
        "filename": "step_ca.go",
        "tools_count": 6,
        "tools": [
          {
            "name": "step_ca_init",
            "description": "Initialize Step CA certificate authority using real Step CA CLI",
            "parameters": [
              {
                "name": "ca_name",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "dns_name",
                "type": "string",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "step_ca_create_certificate",
            "description": "Create certificate using real Step CA CLI",
            "parameters": [
              {
                "name": "subject",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "ca_url",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "root_cert",
                "type": "string",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "step_ca_renew_certificate",
            "description": "Renew certificate using real Step CA CLI",
            "parameters": [
              {
                "name": "cert_path",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "key_path",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "ca_url",
                "type": "string",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "step_ca_add_provisioner",
            "description": "Add provisioner to Step CA using real Step CA CLI",
            "parameters": [
              {
                "name": "provisioner_name",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "provisioner_type",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "ca_config",
                "type": "string",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "step_ca_revoke_certificate",
            "description": "Revoke certificate using real Step CA CLI",
            "parameters": [
              {
                "name": "cert_path",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "key_path",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "ca_url",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "reason",
                "type": "string",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "step_ca_version",
            "description": "Get Step CA version information using real Step CA CLI",
            "parameters": []
          }
        ]
      },
      "syft": {
        "name": "syft",
        "description": "SBOM generation tool",
        "has_variables": false,
        "filename": "syft.go",
        "tools_count": 12,
        "tools": [
          {
            "name": "syft_sbom",
            "description": "Generate CycloneDX or SPDX SBOM from a directory, image, or archive",
            "parameters": [
              {
                "name": "target",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "format",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "output_path",
                "type": "string",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "syft_generate_sbom_directory",
            "description": "Generate SBOM from directory using real Syft CLI",
            "parameters": [
              {
                "name": "directory",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "format",
                "type": "string",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "syft_generate_sbom_image",
            "description": "Generate SBOM from container image using real Syft CLI",
            "parameters": [
              {
                "name": "image",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "format",
                "type": "string",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "syft_generate_sbom_package",
            "description": "Generate SBOM from package using real Syft CLI",
            "parameters": [
              {
                "name": "directory",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "package_type",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "format",
                "type": "string",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "syft_generate_attestations",
            "description": "Generate attestations using real Syft CLI",
            "parameters": [
              {
                "name": "target",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "format",
                "type": "string",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "syft_language_specific_cataloging",
            "description": "Language-specific cataloging using real Syft CLI",
            "parameters": [
              {
                "name": "target",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "languages",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "output_format",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "package_managers",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "depth_limit",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "include_dev_deps",
                "type": "boolean",
                "description": "",
                "required": false
              },
              {
                "name": "include_test_deps",
                "type": "boolean",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "syft_supply_chain_analysis",
            "description": "Supply chain analysis using real Syft CLI",
            "parameters": [
              {
                "name": "target",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "analysis_depth",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "output_formats",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "output_directory",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "risk_assessment",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "include_transitive_deps",
                "type": "boolean",
                "description": "",
                "required": false
              },
              {
                "name": "include_license_analysis",
                "type": "boolean",
                "description": "",
                "required": false
              },
              {
                "name": "include_provenance",
                "type": "boolean",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "syft_sbom_comparison",
            "description": "SBOM comparison using real Syft CLI",
            "parameters": [
              {
                "name": "baseline_target",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "comparison_target",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "comparison_type",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "output_format",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "diff_output_file",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "show_added_only",
                "type": "boolean",
                "description": "",
                "required": false
              },
              {
                "name": "show_removed_only",
                "type": "boolean",
                "description": "",
                "required": false
              },
              {
                "name": "include_version_changes",
                "type": "boolean",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "syft_compliance_attestation",
            "description": "Compliance attestation using real Syft CLI",
            "parameters": [
              {
                "name": "target",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "compliance_framework",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "output_format",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "attestation_format",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "output_file",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "include_supplier_info",
                "type": "boolean",
                "description": "",
                "required": false
              },
              {
                "name": "include_hashes",
                "type": "boolean",
                "description": "",
                "required": false
              },
              {
                "name": "validate_completeness",
                "type": "boolean",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "syft_archive_analysis",
            "description": "Archive analysis using real Syft CLI",
            "parameters": [
              {
                "name": "archive_path",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "archive_type",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "output_format",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "extraction_depth",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "extract_nested",
                "type": "boolean",
                "description": "",
                "required": false
              },
              {
                "name": "include_metadata",
                "type": "boolean",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "syft_cicd_pipeline_integration",
            "description": "CI/CD pipeline integration using real Syft CLI",
            "parameters": [
              {
                "name": "target",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "pipeline_stage",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "artifact_name",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "output_formats",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "output_directory",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "timeout",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "fail_on_error",
                "type": "boolean",
                "description": "",
                "required": false
              },
              {
                "name": "quiet_mode",
                "type": "boolean",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "syft_metadata_extraction",
            "description": "Metadata extraction using real Syft CLI",
            "parameters": [
              {
                "name": "target",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "metadata_types",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "output_format",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "custom_annotations",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "include_file_metadata",
                "type": "boolean",
                "description": "",
                "required": false
              },
              {
                "name": "include_checksums",
                "type": "boolean",
                "description": "",
                "required": false
              },
              {
                "name": "include_certificates",
                "type": "boolean",
                "description": "",
                "required": false
              },
              {
                "name": "include_signatures",
                "type": "boolean",
                "description": "",
                "required": false
              }
            ]
          }
        ]
      },
      "terraform-docs": {
        "name": "terraform-docs",
        "description": "Terraform documentation generator",
        "has_variables": false,
        "filename": "terraform_docs.go",
        "tools_count": 5,
        "tools": [
          {
            "name": "terraform_docs_markdown",
            "description": "Generate Terraform documentation in Markdown format using real terraform-docs CLI",
            "parameters": [
              {
                "name": "directory",
                "type": "string",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "terraform_docs_json",
            "description": "Generate Terraform documentation in JSON format using real terraform-docs CLI",
            "parameters": [
              {
                "name": "directory",
                "type": "string",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "terraform_docs_table",
            "description": "Generate Terraform documentation as table using real terraform-docs CLI",
            "parameters": [
              {
                "name": "directory",
                "type": "string",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "terraform_docs_with_config",
            "description": "Generate Terraform documentation with custom config using real terraform-docs CLI",
            "parameters": [
              {
                "name": "directory",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "config_file",
                "type": "string",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "terraform_docs_version",
            "description": "Get terraform-docs version information using real terraform-docs CLI",
            "parameters": []
          }
        ]
      },
      "terraformer": {
        "name": "terraformer",
        "description": "Infrastructure import and management",
        "has_variables": true,
        "filename": "terraformer.go",
        "tools_count": 4,
        "tools": [
          {
            "name": "terraformer_import",
            "description": "Import existing infrastructure to Terraform using real terraformer CLI",
            "parameters": [
              {
                "name": "provider",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "resources",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "regions",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "excludes",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "filter",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "path_output",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "output_format",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "connect",
                "type": "boolean",
                "description": "",
                "required": false
              },
              {
                "name": "verbose",
                "type": "boolean",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "terraformer_list_resources",
            "description": "List supported resources for a provider using real terraformer CLI",
            "parameters": [
              {
                "name": "provider",
                "type": "string",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "terraformer_plan",
            "description": "Generate planfile for importing resources using real terraformer CLI",
            "parameters": [
              {
                "name": "provider",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "resources",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "regions",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "filter",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "verbose",
                "type": "boolean",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "terraformer_version",
            "description": "Get Terraformer version information using real terraformer CLI",
            "parameters": []
          }
        ]
      },
      "terrascan": {
        "name": "terrascan",
        "description": "IaC security scanner",
        "has_variables": false,
        "filename": "terrascan.go",
        "tools_count": 15,
        "tools": [
          {
            "name": "terrascan_scan_directory",
            "description": "Scan directory for IaC security issues using Terrascan",
            "parameters": [
              {
                "name": "directory",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "output_format",
                "type": "string",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "terrascan_scan_terraform",
            "description": "Scan Terraform files specifically using Terrascan",
            "parameters": [
              {
                "name": "directory",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "output_format",
                "type": "string",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "terrascan_scan_kubernetes",
            "description": "Scan Kubernetes manifests using Terrascan",
            "parameters": [
              {
                "name": "directory",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "output_format",
                "type": "string",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "terrascan_scan_with_severity",
            "description": "Scan with minimum severity level using Terrascan",
            "parameters": [
              {
                "name": "directory",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "severity",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "output_format",
                "type": "string",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "terrascan_scan_remote",
            "description": "Scan remote repository using Terrascan",
            "parameters": [
              {
                "name": "repo_url",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "repo_type",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "output_format",
                "type": "string",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "terrascan_scan_with_policy",
            "description": "Scan using custom policy path with Terrascan",
            "parameters": [
              {
                "name": "directory",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "policy_path",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "output_format",
                "type": "string",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "terrascan_comprehensive_iac_scan",
            "description": "Comprehensive Infrastructure as Code security scanning",
            "parameters": [
              {
                "name": "target",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "iac_type",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "output_format",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "output_file",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "severity_threshold",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "policy_types",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "exclude_rules",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "verbose",
                "type": "boolean",
                "description": "",
                "required": false
              },
              {
                "name": "show_passed",
                "type": "boolean",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "terrascan_compliance_framework_scan",
            "description": "Scan against compliance frameworks using Terrascan",
            "parameters": [
              {
                "name": "target",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "compliance_framework",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "iac_type",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "output_format",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "output_file",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "include_severity_details",
                "type": "boolean",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "terrascan_remote_repository_scan",
            "description": "Advanced remote repository scanning with authentication",
            "parameters": [
              {
                "name": "repository_url",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "repository_type",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "iac_type",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "branch",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "ssh_key_path",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "access_token",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "config_path",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "output_format",
                "type": "string",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "terrascan_custom_policy_management",
            "description": "Manage and validate custom Terrascan policies",
            "parameters": [
              {
                "name": "action",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "policy_path",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "target",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "iac_type",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "test_data_path",
                "type": "string",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "terrascan_cicd_pipeline_integration",
            "description": "Optimized IaC security scanning for CI/CD pipelines",
            "parameters": [
              {
                "name": "target",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "iac_type",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "pipeline_stage",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "gate_policy",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "output_format",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "output_file",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "baseline_file",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "fail_on_violations",
                "type": "boolean",
                "description": "",
                "required": false
              },
              {
                "name": "quiet_mode",
                "type": "boolean",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "terrascan_cloud_provider_scan",
            "description": "Cloud provider specific security scanning",
            "parameters": [
              {
                "name": "target",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "cloud_provider",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "iac_type",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "security_categories",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "service_focus",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "output_format",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "include_best_practices",
                "type": "boolean",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "terrascan_performance_optimization",
            "description": "High-performance IaC scanning with optimization features",
            "parameters": [
              {
                "name": "target",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "iac_type",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "scan_mode",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "parallel_workers",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "max_file_size",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "exclude_dirs",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "skip_large_files",
                "type": "boolean",
                "description": "",
                "required": false
              },
              {
                "name": "enable_caching",
                "type": "boolean",
                "description": "",
                "required": false
              },
              {
                "name": "enable_metrics",
                "type": "boolean",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "terrascan_comprehensive_reporting",
            "description": "Generate comprehensive IaC security reports with analytics",
            "parameters": [
              {
                "name": "target",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "iac_type",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "report_type",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "output_formats",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "output_directory",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "baseline_comparison",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "include_remediation",
                "type": "boolean",
                "description": "",
                "required": false
              },
              {
                "name": "include_trends",
                "type": "boolean",
                "description": "",
                "required": false
              },
              {
                "name": "include_policy_details",
                "type": "boolean",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "terrascan_get_version",
            "description": "Get Terrascan version and supported IaC types",
            "parameters": [
              {
                "name": "show_supported_types",
                "type": "boolean",
                "description": "",
                "required": false
              }
            ]
          }
        ]
      },
      "tflint": {
        "name": "tflint",
        "description": "Terraform linter",
        "has_variables": false,
        "filename": "tflint.go",
        "tools_count": 6,
        "tools": [
          {
            "name": "tflint_lint",
            "description": "Lint Terraform files using real tflint CLI",
            "parameters": [
              {
                "name": "chdir",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "format",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "config",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "recursive",
                "type": "boolean",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "tflint_lint_with_rules",
            "description": "Lint Terraform files with specific rules enabled/disabled using real tflint CLI",
            "parameters": [
              {
                "name": "chdir",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "enable_rule",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "disable_rule",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "format",
                "type": "string",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "tflint_init",
            "description": "Initialize TFLint plugins using real tflint CLI",
            "parameters": [
              {
                "name": "chdir",
                "type": "string",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "tflint_lint_with_var_file",
            "description": "Lint Terraform files with variable files using real tflint CLI",
            "parameters": [
              {
                "name": "chdir",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "var_file",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "format",
                "type": "string",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "tflint_lint_with_var",
            "description": "Lint Terraform files with individual variables using real tflint CLI",
            "parameters": [
              {
                "name": "chdir",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "var",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "format",
                "type": "string",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "tflint_version",
            "description": "Get TFLint version information using real tflint CLI",
            "parameters": []
          }
        ]
      },
      "tfsec": {
        "name": "tfsec",
        "description": "Terraform-specific security scanner",
        "has_variables": false,
        "filename": "tfsec.go",
        "tools_count": 7,
        "tools": [
          {
            "name": "tfsec_scan_directory",
            "description": "Scan Terraform directory for security issues",
            "parameters": [
              {
                "name": "directory",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "format",
                "type": "string",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "tfsec_scan_with_severity",
            "description": "Scan Terraform with minimum severity threshold",
            "parameters": [
              {
                "name": "directory",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "severity",
                "type": "string",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "tfsec_scan_with_excludes",
            "description": "Scan Terraform with excluded checks",
            "parameters": [
              {
                "name": "directory",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "excludes",
                "type": "string",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "tfsec_scan_with_config",
            "description": "Scan Terraform using a config file",
            "parameters": [
              {
                "name": "directory",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "config_path",
                "type": "string",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "tfsec_validate_tfvars",
            "description": "Validate Terraform variable files",
            "parameters": [
              {
                "name": "directory",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "tfvars_file",
                "type": "string",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "tfsec_generate_report",
            "description": "Generate security scan report in various formats",
            "parameters": [
              {
                "name": "directory",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "report_type",
                "type": "string",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "tfsec_get_version",
            "description": "Get tfsec version",
            "parameters": []
          }
        ]
      },
      "tfstate-reader": {
        "name": "tfstate-reader",
        "description": "Terraform state analysis",
        "has_variables": false,
        "filename": "tfstate_reader.go",
        "tools_count": 7,
        "tools": [
          {
            "name": "terraform_state_list",
            "description": "List all resources in Terraform state using real terraform CLI",
            "parameters": [
              {
                "name": "state",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "id",
                "type": "string",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "terraform_state_show",
            "description": "Show attributes of a resource in Terraform state using real terraform CLI",
            "parameters": [
              {
                "name": "resource_address",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "state",
                "type": "string",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "terraform_state_pull",
            "description": "Download and output the state from remote backend using real terraform CLI",
            "parameters": []
          },
          {
            "name": "terraform_show_json",
            "description": "Show state in JSON format using real terraform CLI",
            "parameters": [
              {
                "name": "state_path",
                "type": "string",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "tfstate_lookup_resource",
            "description": "Look up resource attributes in tfstate using real tfstate-lookup CLI",
            "parameters": [
              {
                "name": "resource_address",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "state_file",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "interactive",
                "type": "boolean",
                "description": "",
                "required": false
              },
              {
                "name": "dump",
                "type": "boolean",
                "description": "",
                "required": false
              },
              {
                "name": "jid",
                "type": "boolean",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "tfstate_dump_all",
            "description": "Dump all resources from tfstate using real tfstate-lookup CLI",
            "parameters": [
              {
                "name": "state_file",
                "type": "string",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "tfstate_interactive",
            "description": "Browse tfstate interactively using real tfstate-lookup CLI",
            "parameters": [
              {
                "name": "state_file",
                "type": "string",
                "description": "",
                "required": false
              }
            ]
          }
        ]
      },
      "trivy": {
        "name": "trivy",
        "description": "Comprehensive vulnerability scanner",
        "has_variables": false,
        "filename": "trivy.go",
        "tools_count": 14,
        "tools": [
          {
            "name": "trivy_scan_image",
            "description": "Scan container image for vulnerabilities using Trivy",
            "parameters": [
              {
                "name": "image_name",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "severity",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "output_format",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "output_file",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "scanners",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "ignore_unfixed",
                "type": "boolean",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "trivy_scan_filesystem",
            "description": "Scan filesystem for vulnerabilities using Trivy",
            "parameters": [
              {
                "name": "directory",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "severity",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "output_format",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "scanners",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "skip_dirs",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "include_dev_deps",
                "type": "boolean",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "trivy_scan_repository",
            "description": "Scan git repository for vulnerabilities using Trivy",
            "parameters": [
              {
                "name": "repo_url",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "branch",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "commit",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "severity",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "output_format",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "scanners",
                "type": "string",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "trivy_scan_config",
            "description": "Scan configuration files for security issues using Trivy",
            "parameters": [
              {
                "name": "directory",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "severity",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "output_format",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "policy_bundle",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "config_policy",
                "type": "string",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "trivy_scan_sbom",
            "description": "Scan SBOM file for vulnerabilities using Trivy",
            "parameters": [
              {
                "name": "sbom_path",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "severity",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "output_format",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "output_file",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "ignore_unfixed",
                "type": "boolean",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "trivy_scan_kubernetes",
            "description": "Scan Kubernetes cluster for vulnerabilities using Trivy",
            "parameters": [
              {
                "name": "target",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "cluster_context",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "namespace",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "severity",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "output_format",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "scanners",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "include_images",
                "type": "boolean",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "trivy_generate_sbom",
            "description": "Generate Software Bill of Materials (SBOM) using Trivy",
            "parameters": [
              {
                "name": "target",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "target_type",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "sbom_format",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "output_file",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "include_dev_deps",
                "type": "boolean",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "trivy_scan_with_filters",
            "description": "Scan with advanced filtering options using Trivy",
            "parameters": [
              {
                "name": "target",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "target_type",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "severity",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "vuln_type",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "ignore_file",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "exit_code",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "ignore_unfixed",
                "type": "boolean",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "trivy_database_operations",
            "description": "Perform Trivy vulnerability database operations",
            "parameters": [
              {
                "name": "operation",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "cache_dir",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "skip_update",
                "type": "boolean",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "trivy_server_mode",
            "description": "Run Trivy in server mode for client-server scanning",
            "parameters": [
              {
                "name": "listen_port",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "listen_address",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "token",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "debug",
                "type": "boolean",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "trivy_client_scan",
            "description": "Scan using Trivy client mode (connect to Trivy server)",
            "parameters": [
              {
                "name": "target",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "target_type",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "server_url",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "token",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "output_format",
                "type": "string",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "trivy_plugin_management",
            "description": "Manage Trivy plugins for extended functionality",
            "parameters": [
              {
                "name": "action",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "plugin_name",
                "type": "string",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "trivy_convert_sbom",
            "description": "Convert SBOM between different formats using Trivy",
            "parameters": [
              {
                "name": "input_sbom",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "output_format",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "output_file",
                "type": "string",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "trivy_get_version",
            "description": "Get Trivy version information",
            "parameters": []
          }
        ]
      },
      "trivy-golden": {
        "name": "trivy-golden",
        "description": "Enhanced Trivy for golden images",
        "has_variables": false,
        "filename": "trivy_golden.go",
        "tools_count": 6,
        "tools": [
          {
            "name": "trivy_golden_scan_image",
            "description": "Scan container image for vulnerabilities using real trivy CLI",
            "parameters": [
              {
                "name": "image",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "severity",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "format",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "scanners",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "output",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "exit_code",
                "type": "boolean",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "trivy_golden_scan_filesystem",
            "description": "Scan filesystem for vulnerabilities and misconfigurations using real trivy CLI",
            "parameters": [
              {
                "name": "path",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "scanners",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "severity",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "format",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "output",
                "type": "string",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "trivy_golden_scan_config",
            "description": "Scan configuration files for misconfigurations using real trivy CLI",
            "parameters": [
              {
                "name": "path",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "severity",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "format",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "policy",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "output",
                "type": "string",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "trivy_golden_generate_sbom",
            "description": "Generate Software Bill of Materials (SBOM) for golden image using real trivy CLI",
            "parameters": [
              {
                "name": "image",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "format",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "output",
                "type": "string",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "trivy_golden_scan_secrets",
            "description": "Scan for secrets in golden image using real trivy CLI",
            "parameters": [
              {
                "name": "target",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "target_type",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "format",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "output",
                "type": "string",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "trivy_version",
            "description": "Get Trivy version information using real trivy CLI",
            "parameters": []
          }
        ]
      },
      "trufflehog": {
        "name": "trufflehog",
        "description": "Advanced secret scanning with verification",
        "has_variables": false,
        "filename": "trufflehog.go",
        "tools_count": 18,
        "tools": [
          {
            "name": "trufflehog_scan_directory",
            "description": "Scan directory for secrets using TruffleHog",
            "parameters": [
              {
                "name": "directory",
                "type": "string",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "trufflehog_scan_git_repo",
            "description": "Scan git repository for secrets using TruffleHog",
            "parameters": [
              {
                "name": "repo_url",
                "type": "string",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "trufflehog_scan_github",
            "description": "Scan GitHub repository for secrets using TruffleHog",
            "parameters": [
              {
                "name": "repo",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "token",
                "type": "string",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "trufflehog_scan_github_org",
            "description": "Scan GitHub organization for secrets using TruffleHog",
            "parameters": [
              {
                "name": "org",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "token",
                "type": "string",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "trufflehog_scan_docker",
            "description": "Scan Docker image for secrets using TruffleHog",
            "parameters": [
              {
                "name": "image_name",
                "type": "string",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "trufflehog_scan_s3",
            "description": "Scan S3 bucket for secrets using TruffleHog",
            "parameters": [
              {
                "name": "bucket",
                "type": "string",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "trufflehog_scan_verified",
            "description": "Scan target with secret verification using TruffleHog",
            "parameters": [
              {
                "name": "target",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "target_type",
                "type": "string",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "trufflehog_scan_git_advanced",
            "description": "Scan git repository with advanced filtering options",
            "parameters": [
              {
                "name": "repo_url",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "branch",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "since_date",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "until_date",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "output_format",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "exclude_paths",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "only_verified",
                "type": "boolean",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "trufflehog_scan_filesystem_advanced",
            "description": "Scan filesystem with advanced options and exclusions",
            "parameters": [
              {
                "name": "path",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "exclude_paths",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "output_format",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "max_depth",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "only_verified",
                "type": "boolean",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "trufflehog_scan_docker_advanced",
            "description": "Scan Docker image with advanced verification options",
            "parameters": [
              {
                "name": "image",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "output_format",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "layers",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "only_verified",
                "type": "boolean",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "trufflehog_comprehensive_secret_detection",
            "description": "Comprehensive secret detection with advanced filtering and verification",
            "parameters": [
              {
                "name": "target",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "source_type",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "output_format",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "output_file",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "confidence_level",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "exclude_paths",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "include_paths",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "only_verified",
                "type": "boolean",
                "description": "",
                "required": false
              },
              {
                "name": "include_detectors",
                "type": "boolean",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "trufflehog_cloud_storage_scanning",
            "description": "Comprehensive cloud storage secret scanning",
            "parameters": [
              {
                "name": "cloud_provider",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "resource_identifier",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "credentials_profile",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "region",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "file_patterns",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "max_file_size",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "recursive",
                "type": "boolean",
                "description": "",
                "required": false
              },
              {
                "name": "only_verified",
                "type": "boolean",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "trufflehog_custom_detector_management",
            "description": "Manage and use custom secret detectors",
            "parameters": [
              {
                "name": "action",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "detector_config",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "target",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "detector_pattern",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "include_builtin",
                "type": "boolean",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "trufflehog_enterprise_git_scanning",
            "description": "Enterprise-grade git repository scanning with advanced options",
            "parameters": [
              {
                "name": "git_source",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "repository",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "authentication",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "scan_mode",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "commit_range",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "branches",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "output_format",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "include_forks",
                "type": "boolean",
                "description": "",
                "required": false
              },
              {
                "name": "include_issues",
                "type": "boolean",
                "description": "",
                "required": false
              },
              {
                "name": "include_pull_requests",
                "type": "boolean",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "trufflehog_cicd_pipeline_integration",
            "description": "Optimized secret scanning for CI/CD pipelines",
            "parameters": [
              {
                "name": "scan_target",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "scan_type",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "baseline_file",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "output_format",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "output_file",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "timeout",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "fail_on_verified",
                "type": "boolean",
                "description": "",
                "required": false
              },
              {
                "name": "fail_on_unverified",
                "type": "boolean",
                "description": "",
                "required": false
              },
              {
                "name": "quiet_mode",
                "type": "boolean",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "trufflehog_performance_optimization",
            "description": "High-performance secret scanning with optimization features",
            "parameters": [
              {
                "name": "target",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "source_type",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "concurrency",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "max_file_size",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "buffer_size",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "memory_limit",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "skip_binaries",
                "type": "boolean",
                "description": "",
                "required": false
              },
              {
                "name": "enable_sampling",
                "type": "boolean",
                "description": "",
                "required": false
              },
              {
                "name": "enable_metrics",
                "type": "boolean",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "trufflehog_comprehensive_reporting",
            "description": "Generate comprehensive secret scanning reports with analytics",
            "parameters": [
              {
                "name": "target",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "source_type",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "report_type",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "output_formats",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "output_directory",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "baseline_comparison",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "include_verification_status",
                "type": "boolean",
                "description": "",
                "required": false
              },
              {
                "name": "include_risk_assessment",
                "type": "boolean",
                "description": "",
                "required": false
              },
              {
                "name": "include_trends",
                "type": "boolean",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "trufflehog_get_version",
            "description": "Get TruffleHog version and detector information",
            "parameters": [
              {
                "name": "show_detectors",
                "type": "boolean",
                "description": "",
                "required": false
              }
            ]
          }
        ]
      },
      "velero": {
        "name": "velero",
        "description": "Kubernetes backup and restore",
        "has_variables": true,
        "filename": "velero.go",
        "tools_count": 16,
        "tools": [
          {
            "name": "velero_install",
            "description": "Install Velero with storage provider configuration using real velero CLI",
            "parameters": [
              {
                "name": "provider",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "bucket",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "region",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "secret_file",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "namespace",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "plugins",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "use_node_agent",
                "type": "boolean",
                "description": "",
                "required": false
              },
              {
                "name": "no_secret",
                "type": "boolean",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "velero_create_schedule",
            "description": "Create a backup schedule using velero CLI",
            "parameters": [
              {
                "name": "name",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "schedule",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "include_namespaces",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "exclude_namespaces",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "ttl",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "labels",
                "type": "string",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "velero_backup_create",
            "description": "Create an on-demand backup using velero CLI",
            "parameters": [
              {
                "name": "name",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "from_schedule",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "include_namespaces",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "exclude_namespaces",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "labels",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "wait",
                "type": "boolean",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "velero_restore_create",
            "description": "Create a restore from backup using velero CLI",
            "parameters": [
              {
                "name": "name",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "from_backup",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "namespace_mappings",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "include_namespaces",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "exclude_namespaces",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "restore_pvs",
                "type": "boolean",
                "description": "",
                "required": false
              },
              {
                "name": "wait",
                "type": "boolean",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "velero_backup_get",
            "description": "Get list of backups using velero CLI",
            "parameters": [
              {
                "name": "output",
                "type": "string",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "velero_backup_describe",
            "description": "Describe a specific backup using velero CLI",
            "parameters": [
              {
                "name": "name",
                "type": "string",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "velero_restore_get",
            "description": "Get list of restores using velero CLI",
            "parameters": [
              {
                "name": "output",
                "type": "string",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "velero_restore_describe",
            "description": "Describe a specific restore using velero CLI",
            "parameters": [
              {
                "name": "name",
                "type": "string",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "velero_schedule_get",
            "description": "Get list of backup schedules using velero CLI",
            "parameters": [
              {
                "name": "output",
                "type": "string",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "velero_backup_delete",
            "description": "Delete a backup using velero CLI",
            "parameters": [
              {
                "name": "name",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "confirm",
                "type": "boolean",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "velero_schedule_delete",
            "description": "Delete a backup schedule using velero CLI",
            "parameters": [
              {
                "name": "name",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "confirm",
                "type": "boolean",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "velero_backup_location_create",
            "description": "Create backup storage location using velero CLI",
            "parameters": [
              {
                "name": "name",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "provider",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "bucket",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "config",
                "type": "string",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "velero_backup_location_get",
            "description": "Get backup storage locations using velero CLI",
            "parameters": [
              {
                "name": "output",
                "type": "string",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "velero_version",
            "description": "Get Velero version information using velero CLI",
            "parameters": [
              {
                "name": "client_only",
                "type": "boolean",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "velero_backup_logs",
            "description": "Get backup logs using velero CLI",
            "parameters": [
              {
                "name": "name",
                "type": "string",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "velero_restore_logs",
            "description": "Get restore logs using velero CLI",
            "parameters": [
              {
                "name": "name",
                "type": "string",
                "description": "",
                "required": false
              }
            ]
          }
        ]
      },
      "zap": {
        "name": "zap",
        "description": "OWASP ZAP web application scanner",
        "has_variables": false,
        "filename": "zap.go",
        "tools_count": 6,
        "tools": [
          {
            "name": "zap_passive_scan",
            "description": "Perform passive security scan using OWASP ZAP",
            "parameters": [
              {
                "name": "target",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "output_format",
                "type": "string",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "zap_active_scan",
            "description": "Perform active security scan using OWASP ZAP",
            "parameters": [
              {
                "name": "target",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "output_format",
                "type": "string",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "zap_spider_scan",
            "description": "Perform spider crawl and scan using OWASP ZAP",
            "parameters": [
              {
                "name": "target",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "output_format",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "max_depth",
                "type": "number",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "zap_full_scan",
            "description": "Perform comprehensive security scan using OWASP ZAP",
            "parameters": [
              {
                "name": "target",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "output_format",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "max_duration",
                "type": "number",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "zap_baseline_scan",
            "description": "Perform baseline security scan using OWASP ZAP",
            "parameters": [
              {
                "name": "target",
                "type": "string",
                "description": "",
                "required": false
              },
              {
                "name": "output_format",
                "type": "string",
                "description": "",
                "required": false
              }
            ]
          },
          {
            "name": "zap_get_version",
            "description": "Get OWASP ZAP version information",
            "parameters": []
          }
        ]
      }
    }
  }
}